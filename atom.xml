<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>luzhiyuan的博客</title>
  
  <subtitle>个人博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-07-27T18:37:30.172Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>lu zhiyuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>laravel的设计</title>
    <link href="http://example.com/2024/07/28/laravel%E7%9A%84%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2024/07/28/laravel%E7%9A%84%E8%AE%BE%E8%AE%A1/</id>
    <published>2024-07-27T17:44:14.000Z</published>
    <updated>2024-07-27T18:37:30.172Z</updated>
    
    <content type="html"><![CDATA[<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>laravel的入口是 <code>public/index.php</code> 文件，apache或nginx会把所有请求导向该文件。该文件的代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Http</span>\<span class="title">Kernel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;LARAVEL_START&#x27;</span>, <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Check If The Application Is Under Maintenance</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| If the application is in maintenance / demo mode via the &quot;down&quot; command</span></span><br><span class="line"><span class="comment">| we will load this file so that any pre-rendered content can be shown</span></span><br><span class="line"><span class="comment">| instead of starting the framework, which could cause an exception.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$maintenance</span> = <span class="keyword">__DIR__</span>.<span class="string">&#x27;/../storage/framework/maintenance.php&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">require</span> <span class="variable">$maintenance</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Register The Auto Loader</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| Composer provides a convenient, automatically generated class loader for</span></span><br><span class="line"><span class="comment">| this application. We just need to utilize it! We&#x27;ll simply require it</span></span><br><span class="line"><span class="comment">| into the script here so we don&#x27;t need to manually load our classes.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span>.<span class="string">&#x27;/../vendor/autoload.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Run The Application</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| Once we have the application, we can handle the incoming request using</span></span><br><span class="line"><span class="comment">| the application&#x27;s HTTP kernel. Then, we will send the response back</span></span><br><span class="line"><span class="comment">| to this client&#x27;s browser, allowing them to enjoy our application.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$app</span> = <span class="keyword">require_once</span> <span class="keyword">__DIR__</span>.<span class="string">&#x27;/../bootstrap/app.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$kernel</span> = <span class="variable">$app</span>-&gt;<span class="title function_ invoke__">make</span>(<span class="title class_">Kernel</span>::<span class="variable language_">class</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$response</span> = <span class="variable">$kernel</span>-&gt;<span class="title function_ invoke__">handle</span>(</span><br><span class="line">    <span class="variable">$request</span> = <span class="title class_">Request</span>::<span class="title function_ invoke__">capture</span>()</span><br><span class="line">)-&gt;<span class="title function_ invoke__">send</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$kernel</span>-&gt;<span class="title function_ invoke__">terminate</span>(<span class="variable">$request</span>, <span class="variable">$response</span>);</span><br></pre></td></tr></table></figure><p>laravel的第一步是从<code>bootstrap/app.php</code>中获取app实例（service container）。</p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>所有的请求进入http kernel，位置在 <code>app/Http/Kernel.php</code>，这个类里定义了一堆中间件数组。所有请求都需要这些中间件处理。kernel类的handle方法接受请求，返回响应。</p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>在laravel启动过程中，最重要的是加载各个providers，这些providers可以被当作是laravel的零件。laravel的所有providers都在 config&#x2F;app.php 文件中的providers数组中配置。</p><h3 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h3><p>最重要的一个providers叫RouteServiceProvider，这个类的位置在<code>app/Providers/RouteServiceProvider.php</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Providers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Cache</span>\<span class="title">RateLimiting</span>\<span class="title">Limit</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Support</span>\<span class="title">Providers</span>\<span class="title">RouteServiceProvider</span> <span class="keyword">as</span> <span class="title">ServiceProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">RateLimiter</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Route</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RouteServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The path to your application&#x27;s &quot;home&quot; route.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Typically, users are redirected here after authentication.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">const</span> <span class="variable constant_">HOME</span> = <span class="string">&#x27;/home&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Define your route model bindings, pattern filters, and other route configuration.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>): <span class="title">void</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title class_">RateLimiter</span>::<span class="keyword">for</span>(<span class="string">&#x27;api&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">Request <span class="variable">$request</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Limit</span>::<span class="title function_ invoke__">perMinute</span>(<span class="number">60</span>)-&gt;<span class="title function_ invoke__">by</span>(<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">user</span>()?-&gt;id ?: <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">ip</span>());</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">routes</span>(function () &#123;</span><br><span class="line">            <span class="title class_">Route</span>::<span class="title function_ invoke__">middleware</span>(<span class="string">&#x27;api&#x27;</span>)</span><br><span class="line">                -&gt;<span class="title function_ invoke__">prefix</span>(<span class="string">&#x27;api&#x27;</span>)</span><br><span class="line">                -&gt;<span class="title function_ invoke__">group</span>(<span class="title function_ invoke__">base_path</span>(<span class="string">&#x27;routes/api.php&#x27;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="title class_">Route</span>::<span class="title function_ invoke__">middleware</span>(<span class="string">&#x27;web&#x27;</span>)</span><br><span class="line">                -&gt;<span class="title function_ invoke__">group</span>(<span class="title function_ invoke__">base_path</span>(<span class="string">&#x27;routes/web.php&#x27;</span>));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>路由把请求分配给controller，并运行任何特定路由中间件。</p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>handle方法返回响应，然后send方法返回内容到浏览器。</p><h2 id="容器与依赖注入"><a href="#容器与依赖注入" class="headerlink" title="容器与依赖注入"></a>容器与依赖注入</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;流程&quot;&gt;&lt;a href=&quot;#流程&quot; class=&quot;headerlink&quot; title=&quot;流程&quot;&gt;&lt;/a&gt;流程&lt;/h2&gt;&lt;h3 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h3&gt;&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CMake教程</title>
    <link href="http://example.com/2024/04/30/cmake%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2024/04/30/cmake%E6%95%99%E7%A8%8B/</id>
    <published>2024-04-30T11:07:40.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="构建可执行程序"><a href="#构建可执行程序" class="headerlink" title="构建可执行程序"></a>构建可执行程序</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(demo demo.cxx)</span><br></pre></td></tr></table></figure><h2 id="添加版本号"><a href="#添加版本号" class="headerlink" title="添加版本号"></a>添加版本号</h2><p><code>cmakelists.txt</code>写入：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">2.6</span>)</span><br><span class="line"><span class="keyword">project</span>(Demo)</span><br><span class="line"><span class="comment"># 版本号 1.0</span></span><br><span class="line"><span class="keyword">set</span>(Demo_VERSION_MAJOR <span class="number">1</span>)</span><br><span class="line"><span class="keyword">set</span>(Demo_VERSION_MINOR <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用.in文件生成.h文件</span></span><br><span class="line"><span class="keyword">configure_file</span>(</span><br><span class="line">        <span class="string">&quot;$&#123;PROJECT_SOURCE_DIR&#125;/DemoConfig.h.in&quot;</span></span><br><span class="line">        <span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;/DemoConfig.h&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(demo demo.cpp)</span><br></pre></td></tr></table></figure><p>新建<code>DemoConfig.h.in</code>文件，写入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> VERSION_MAJOR @Demo_VERSION_MAJOR@</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VERSION_MINOR @Demo_VERSION_MINOR@</span></span><br></pre></td></tr></table></figure><p>新建<code>demo.cpp</code>文件，写入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DemoConfig.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;%s --- 版本号： %d.%d\n&quot;</span>,</span><br><span class="line">            argv[<span class="number">0</span>],</span><br><span class="line">            VERSION_MAJOR,</span><br><span class="line">            VERSION_MINOR);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印版本号。</p><p>为什么不直接把版本号写到源码里呢？当然可以，写在cmake配置文件里比较灵活。</p><h2 id="添加一个库"><a href="#添加一个库" class="headerlink" title="添加一个库"></a>添加一个库</h2><p>新建一个目录，名为<code>MathFunctions</code>,里面新建两个文件，<code>MathFunctions.h</code>和<code>math.cpp</code>。<br>.h文件里写入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> DEMO_MATHFUNCTIONS_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEMO_MATHFUNCTIONS_H</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">square</span><span class="params">(<span class="type">int</span> x)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">//DEMO_MATHFUNCTIONS_H</span></span></span><br></pre></td></tr></table></figure><p>.cpp文件里写入:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">square</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> res;</span><br><span class="line">    res = x * x;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在此目录中新建一个&#96;&#96;CmakeLists.txt&#96;，写入：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(MathFunctions <span class="keyword">math</span>.cpp)</span><br></pre></td></tr></table></figure><p>回到父目录，<code>DemoConfig.h.in</code>里写入:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cmakedefine USE_MYMATH</span></span><br></pre></td></tr></table></figure><p>回到父目录的cmkaelist.txt文件中，修改为:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">2.6</span>)</span><br><span class="line"><span class="keyword">project</span>(Demo)</span><br><span class="line"><span class="comment"># 版本号 1.0</span></span><br><span class="line"><span class="keyword">set</span>(Demo_VERSION_MAJOR <span class="number">1</span>)</span><br><span class="line"><span class="keyword">set</span>(Demo_VERSION_MINOR <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用.in文件生成.h文件</span></span><br><span class="line"><span class="keyword">configure_file</span>(</span><br><span class="line">        <span class="string">&quot;$&#123;PROJECT_SOURCE_DIR&#125;/DemoConfig.h.in&quot;</span></span><br><span class="line">        <span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;/DemoConfig.h&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否使用我们自己的函数？</span></span><br><span class="line"><span class="keyword">option</span>(USE_MYMATH</span><br><span class="line">        <span class="string">&quot;Use demo provided math implementation&quot;</span> <span class="keyword">ON</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the MathFunctions library?</span></span><br><span class="line"><span class="keyword">if</span> (USE_MYMATH)</span><br><span class="line">    <span class="keyword">include_directories</span>(<span class="string">&quot;$&#123;PROJECT_SOURCE_DIR&#125;/MathFunctions&quot;</span>)</span><br><span class="line">    <span class="keyword">add_subdirectory</span>(MathFunctions)</span><br><span class="line">    <span class="keyword">set</span>(EXTRA_LIBS <span class="variable">$&#123;EXTRA_LIBS&#125;</span> MathFunctions)</span><br><span class="line"><span class="keyword">endif</span> (USE_MYMATH)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the executable</span></span><br><span class="line"><span class="keyword">add_executable</span>(demo demo.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(demo <span class="variable">$&#123;EXTRA_LIBS&#125;</span>)</span><br></pre></td></tr></table></figure><p>在demo.cpp里测试一下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DemoConfig.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> USE_MYMATH</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MathFunctions.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;%s --- 版本号： %d.%d\n&quot;</span>,</span><br><span class="line">            argv[<span class="number">0</span>],</span><br><span class="line">            VERSION_MAJOR,</span><br><span class="line">            VERSION_MINOR);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,square(<span class="number">5</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装与打包"><a href="#安装与打包" class="headerlink" title="安装与打包"></a>安装与打包</h2><p>先安装NSIS程序：<a href="https://nsis.sourceforge.io/Main_Page">https://nsis.sourceforge.io/Main_Page</a></p><p>顶层<code>cmakelists.txt</code>中写入：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add the install targets</span></span><br><span class="line"><span class="keyword">install</span> (TARGETS demo DESTINATION bin)</span><br><span class="line"><span class="keyword">install</span> (FILES <span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;/DemoConfig.h&quot;</span></span><br><span class="line">        DESTINATION <span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># build a CPack driven installer package</span></span><br><span class="line"><span class="keyword">include</span> (InstallRequiredSystemLibraries)</span><br><span class="line"><span class="keyword">set</span> (CPACK_RESOURCE_FILE_LICENSE</span><br><span class="line">        <span class="string">&quot;$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/License.txt&quot;</span>)</span><br><span class="line"><span class="keyword">set</span> (CPACK_PACKAGE_VERSION_MAJOR <span class="string">&quot;$&#123;demo_VERSION_MAJOR&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">set</span> (CPACK_PACKAGE_VERSION_MINOR <span class="string">&quot;$&#123;demo_VERSION_MINOR&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">include</span> (CPack)</span><br></pre></td></tr></table></figure><p><code>mathfunctions</code>目录中的<code>cmakelists.txt</code>中写入：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">install</span> (TARGETS MathFunctions DESTINATION bin)</span><br><span class="line"><span class="keyword">install</span> (FILES MathFunctions.h DESTINATION <span class="keyword">include</span>)</span><br></pre></td></tr></table></figure><p>命令行运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpack --config CPackConfig.cmake</span><br></pre></td></tr></table></figure><p>生成了Demo–win64.exe安装程序。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;构建可执行程序&quot;&gt;&lt;a href=&quot;#构建可执行程序&quot; class=&quot;headerlink&quot; title=&quot;构建可执行程序&quot;&gt;&lt;/a&gt;构建可执行程序&lt;/h2&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>二叉排序树</title>
    <link href="http://example.com/2024/04/28/%E4%BA%8C%E5%8F%89%E6%8E%92%E5%BA%8F%E6%A0%91-md/"/>
    <id>http://example.com/2024/04/28/%E4%BA%8C%E5%8F%89%E6%8E%92%E5%BA%8F%E6%A0%91-md/</id>
    <published>2024-04-27T22:03:09.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二叉排序树是啥"><a href="#二叉排序树是啥" class="headerlink" title="二叉排序树是啥"></a>二叉排序树是啥</h2><p>是一个具有以下性质的二叉树：</p><ul><li>左子树小于根节点</li><li>右子树大于根节点</li><li>中序遍历二叉树得到有序数列</li></ul><h2 id="如何插入新节点"><a href="#如何插入新节点" class="headerlink" title="如何插入新节点"></a>如何插入新节点</h2><p>二叉排序树是一个<strong>动态</strong>树，节点的生成是动态的。生成二叉排序树的过程就是无序数列变为有序数列的过程。这个过程是：</p><ol><li><p>查找树，查找失败的时候插入</p></li><li><p>指针返回插入位置（左子树或右子树）</p></li></ol><p>代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">insert_bst</span><span class="params">(BinaryTree *T, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">    KeyType key;</span><br><span class="line">    BinaryTree p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!search_bst(T, e.key, <span class="literal">NULL</span>, p)) <span class="comment">//查找失败</span></span><br><span class="line">    &#123;</span><br><span class="line">        BinaryTree s = (BinaryTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BinaryTreeNode));</span><br><span class="line">        s-&gt;data = e;</span><br><span class="line">        s-&gt;Lchild = s-&gt;Rchild = <span class="literal">NULL</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!p) </span><br><span class="line">            T = s; <span class="comment">//新节点变为新的根节点(空树的时候)</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (LQ(e.key, p-&gt;data.key))</span><br><span class="line">        &#123;</span><br><span class="line">            p-&gt;Lchild = s; <span class="comment">//新节点为左子树</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p-&gt;Rchild = s; <span class="comment">//新节点为右子树</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//查找成功，不插入</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查找树的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">search_bst</span><span class="params">(BinaryTree T, KeyType key, BinaryTree parents, BinaryTree *ptr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!T)</span><br><span class="line">    &#123;</span><br><span class="line">        ptr = parents;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (EQ(key, T-&gt;data.key)) <span class="comment">// 查找成功</span></span><br><span class="line">    &#123;</span><br><span class="line">        ptr = T;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (LT(key, T-&gt;data.key))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> search_bst(T-&gt;Lchild, key, T, &amp;ptr); <span class="comment">//查找左子树</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> search_bst(T-&gt;Rchild, key, T, &amp;ptr); <span class="comment">//查找右子树</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何删除节点"><a href="#如何删除节点" class="headerlink" title="如何删除节点"></a>如何删除节点</h2><p>删除节点分以下情况：</p><ul><li>节点的<strong>左右子树为空</strong>的时候  —  修改父节点指针</li><li>节点的<strong>左子树或右子树为空</strong>的时候  — 令节点的左子树或右子树成为父节点的左子树或右子树</li><li>节点的<strong>左右子树不为空</strong>的时候 — 前驱代替被删节点，删去前驱。前驱的左子树变为父节点的右子树，右变为父的左子树。</li></ul><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">delete_bst</span><span class="params">(BinaryTree *T, KeyType key)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (EQ(key, (*T)-&gt;data.key))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> delete (&amp;T);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (LT(key, (*T)-&gt;data.key))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* code */</span></span><br><span class="line">            <span class="keyword">return</span> delete_bst((*T)-&gt;Lchild, key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> delete_bst((*T)-&gt;Rchild, key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Status <span class="title function_">delete</span><span class="params">(BinaryTree *p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!(*p)-&gt;Rchild)</span><br><span class="line">    &#123;</span><br><span class="line">        BinaryTree q = p;</span><br><span class="line">        p = (*p)-&gt;Lchild;</span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!(*p)-&gt;Lchild)</span><br><span class="line">    &#123;</span><br><span class="line">        BinaryTree q = p;</span><br><span class="line">        p = (*p)-&gt;Rchild;</span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">// 左右子树均不为空</span></span><br><span class="line">    &#123;</span><br><span class="line">        BinaryTree q = p;</span><br><span class="line">        BinaryTree s = (*p)-&gt;Lchild;</span><br><span class="line">        <span class="keyword">while</span> (s-&gt;Rchild)</span><br><span class="line">        &#123;</span><br><span class="line">            q = s;</span><br><span class="line">            s = s-&gt;Rchild;</span><br><span class="line">        &#125; <span class="comment">// 转左，然后向右走到头（找到直接前驱）</span></span><br><span class="line"></span><br><span class="line">        (*p)-&gt;data = s-&gt;data; <span class="comment">// s指向被删节点的前驱</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (q != p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 重接右子树</span></span><br><span class="line">            q-&gt;Rchild = s-&gt;Lchild;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;  <span class="comment">//重接左子树</span></span><br><span class="line">            q-&gt;Lchild = s-&gt;Lchild;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">free</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所谓“前驱”，指的是在中序遍历数列中，节点的直接前驱。</p><p>为什么转左，向右走到头就能找到直接前驱呢？<br>因为这样可以找到被删节点左子树中最大的节点，在中序遍历数列中即比被删节点小，即被删节点前驱。</p><h2 id="静态查找"><a href="#静态查找" class="headerlink" title="静态查找"></a>静态查找</h2><p>二叉排序树是动态查找，理解这个玩意还是有难度的。静态查找还是比较好理解的：</p><p>比如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 遍历</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">search_sq</span><span class="params">(SStable ST, KeyType key)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    ST.elem[<span class="number">0</span>].key = key; <span class="comment">// 设置监视哨</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = ST.length; ST.elem[i].key != key; i--);</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 二分查找</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">search_bin</span><span class="params">(SStable ST, KeyType key)</span> &#123;</span><br><span class="line">    <span class="type">int</span> low = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> high = ST.length;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">        <span class="type">int</span> mid = low + high / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (EQ(key, ST.elem[mid].key)) &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (LT(key, ST.elem[mid].key)) &#123;</span><br><span class="line">            high = mid - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            low = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用到的数据类型：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 关键字类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">void</span> *KeyType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">void</span> *InfoType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对数值类关键字的比较</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EQ(a, b) ((a) == (b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LT(a, b) ((a) &lt; (b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LQ(a, b) ((a) &lt;= (b))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对字符串类关键字的比较</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EQ(a, b) (!strcmp((a), (b)))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LT(a, b) (strcmp((a), (b)) &lt; 0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LQ(a, b) (strcmp((a), (b)) &lt;= 0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据元素类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ElemType</span> &#123;</span></span><br><span class="line">    <span class="comment">/* data */</span></span><br><span class="line">    KeyType key;</span><br><span class="line">    InfoType otherinfo;</span><br><span class="line">&#125; ElemType;</span><br><span class="line"></span><br><span class="line"><span class="comment">//顺序表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SStable</span> &#123;</span></span><br><span class="line">    <span class="comment">/* data */</span></span><br><span class="line">    ElemType *elem;</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line"></span><br><span class="line">&#125; SStable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BinaryTreeNode</span> &#123;</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">BinaryTreeNode</span> *<span class="title">Lchild</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">BinaryTreeNode</span> *<span class="title">Rchild</span>;</span></span><br><span class="line">&#125; BinaryTreeNode;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二叉树</span></span><br><span class="line"><span class="keyword">typedef</span> BinaryTreeNode *BinaryTree;</span><br></pre></td></tr></table></figure><p>难理解的是二叉排序树的删除，先得需要知道中序遍历是啥。然后再用直接前驱（或直接后继）来代替被删节点。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;二叉排序树是啥&quot;&gt;&lt;a href=&quot;#二叉排序树是啥&quot; class=&quot;headerlink&quot; title=&quot;二叉排序树是啥&quot;&gt;&lt;/a&gt;二叉排序树是啥&lt;/h2&gt;&lt;p&gt;是一个具有以下性质的二叉树：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;左子树小于根节点&lt;/li&gt;
&lt;li&gt;右子树大</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>为什么说赋值并不好理解</title>
    <link href="http://example.com/2024/04/25/%E8%B5%8B%E5%80%BC%E4%B8%BA%E4%BB%80%E4%B9%88%E5%B9%B6%E4%B8%8D%E5%A5%BD%E7%90%86%E8%A7%A3/"/>
    <id>http://example.com/2024/04/25/%E8%B5%8B%E5%80%BC%E4%B8%BA%E4%BB%80%E4%B9%88%E5%B9%B6%E4%B8%8D%E5%A5%BD%E7%90%86%E8%A7%A3/</id>
    <published>2024-04-24T23:54:13.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="赋值是什么？"><a href="#赋值是什么？" class="headerlink" title="赋值是什么？"></a>赋值是什么？</h2><p>对于那些以面向过程语言来入门的人来说，可能认为赋值是最重要的东西。因为上来就说的是这个，并且也貌似容易理解。<br>但是，赋值和所谓的“变量”真正意义是啥呢？</p><h2 id="两个意思"><a href="#两个意思" class="headerlink" title="两个意思"></a>两个意思</h2><p>变量就是一块内存，赋值就是<strong>改变</strong>这块存储的内容。问题就出在这个改变上，这个改变导致了状态的变化。比如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">a = a + <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>对于初学者来说，碰到<code>a = a + 10</code>这种语句肯定非常困惑，<code>a = 1</code>是好理解的，无非就是给1起名字叫a，在这里等号就是起名字的意思，但是到了<code>a = a + 10</code>这句，等号就不再是起名字的意思了。等号的意思是改变a的状态，a的初始状态是1，改变a的状态，加10。<br>那问题就来了，这个<code>a</code>这个字母，第一行的a和第二行的a是不是同一个a？当然不是，但是，人脑习惯上会把不同的东西当作一个东西。<br>昨天的我和今天的我当然不是同一个我，<strong>但是</strong>，我仍然认为就是同一个我。没想到在这里遇到了赫拉克利特的困境：</p><blockquote><p>人不能两次踏进同一条河流</p></blockquote><p>虽然确实不是同一条河流，但是我坚持认为就是同一条河流。</p><p>赋值，有时候是起名字的意思，有时候是改变状态的意思。</p><h2 id="名字起的好有多重要"><a href="#名字起的好有多重要" class="headerlink" title="名字起的好有多重要"></a>名字起的好有多重要</h2><p>编程就是起名字，然后控制这些名字。至于怎么个控制法，那就是一个学问了。</p><p>例子：<br>二叉树右旋</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定位右孩子（起名字）</span></span><br><span class="line">right_child = (*root)-&gt;Right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//右孩子的左节点变为根节点的右子树（改变）</span></span><br><span class="line">(*root)-&gt;right = right_child-&gt;left;</span><br><span class="line"><span class="comment">//根变为右孩子的左子树（改变）</span></span><br><span class="line">right_child-&gt;left = root;</span><br><span class="line"><span class="comment">//右孩子变为当前根节点（改变）</span></span><br><span class="line">root = richt_child;</span><br></pre></td></tr></table></figure><div style="height: 600px;width: 400px"><a href="https://imgbox.com/VntIOsWS" target="_blank"><img src="https://images2.imgbox.com/95/87/VntIOsWS_o.jpg" alt="image host"/></a></div><p>这几行代码貌似看着简单，都是赋值语句。但是理解起来并不简单。因为它在频繁的改变状态:</p><p>频繁改变状态带来的问题就是必须得跟踪这个状态的改变，才能理解代码的逻辑。</p><h2 id="为什么看不懂源码"><a href="#为什么看不懂源码" class="headerlink" title="为什么看不懂源码"></a>为什么看不懂源码</h2><ul><li>没有类型标识，变量名起的太差，不知道名字的语义是啥。</li><li>不知道名字的状态是啥，无法跟踪它的状态。</li></ul><p>这也就不难理解为什么有人建议要谨慎赋值了，主要是为了可读性。还有提高可读性的方法就是，精简注释，函数起名的时候尽量用动词，比如<code>get_height</code>, <code>close_remote</code>这种。容器类型的名字尽量是复数之类的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;赋值是什么？&quot;&gt;&lt;a href=&quot;#赋值是什么？&quot; class=&quot;headerlink&quot; title=&quot;赋值是什么？&quot;&gt;&lt;/a&gt;赋值是什么？&lt;/h2&gt;&lt;p&gt;对于那些以面向过程语言来入门的人来说，可能认为赋值是最重要的东西。因为上来就说的是这个，并且也貌似容易理解。</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>OpenGL绘制三角形</title>
    <link href="http://example.com/2024/04/24/opengl%E7%BB%98%E5%88%B6%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    <id>http://example.com/2024/04/24/opengl%E7%BB%98%E5%88%B6%E4%B8%89%E8%A7%92%E5%BD%A2/</id>
    <published>2024-04-23T17:20:40.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="渲染流程"><a href="#渲染流程" class="headerlink" title="渲染流程"></a>渲染流程</h2><p>先把数据变成二进制，再让GPU解释二进制。把数据变成二进制的过程称为<strong>管线（pipeline）</strong>,用一种编程语言来操控这个管线，叫GLSL。<br>管线由各种着色器组成，至少需要俩着色器，顶点着色器和片段着色器。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编译着色器</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">compile_shader</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// glsl源码</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *vertexShaderSource = <span class="string">&quot;#version 330 core\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;layout (location = 0) in vec3 aPos;\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;void main()\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;&#123;\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;&#125;\0&quot;</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *fragmentShaderSource = <span class="string">&quot;#version 330 core\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;out vec4 FragColor;\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;void main()\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;&#123;\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;   FragColor = vec4(0.2f, 0.0f, 0.5f, 1.0f);\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line">    <span class="comment">// 编译shader</span></span><br><span class="line">    <span class="comment">// ------------------------------------</span></span><br><span class="line">    <span class="comment">// 顶点着色器</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> vertexShader = glCreateShader(GL_VERTEX_SHADER);</span><br><span class="line">    glShaderSource(vertexShader, <span class="number">1</span>, &amp;vertexShaderSource, <span class="literal">NULL</span>);</span><br><span class="line">    glCompileShader(vertexShader);</span><br><span class="line">    <span class="comment">// check for shader compile errors</span></span><br><span class="line">    <span class="type">int</span> success;</span><br><span class="line">    <span class="type">char</span> infoLog[<span class="number">512</span>];</span><br><span class="line">    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &amp;success);</span><br><span class="line">    <span class="keyword">if</span> (!success) &#123;</span><br><span class="line">        glGetShaderInfoLog(vertexShader, <span class="number">512</span>, <span class="literal">NULL</span>, infoLog);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 片段着色器</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">    glShaderSource(fragmentShader, <span class="number">1</span>, &amp;fragmentShaderSource, <span class="literal">NULL</span>);</span><br><span class="line">    glCompileShader(fragmentShader);</span><br><span class="line">    <span class="comment">// check for shader compile errors</span></span><br><span class="line">    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &amp;success);</span><br><span class="line">    <span class="keyword">if</span> (!success) &#123;</span><br><span class="line">        glGetShaderInfoLog(fragmentShader, <span class="number">512</span>, <span class="literal">NULL</span>, infoLog);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 链接</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> shaderProgram = glCreateProgram();</span><br><span class="line">    glAttachShader(shaderProgram, vertexShader);</span><br><span class="line">    glAttachShader(shaderProgram, fragmentShader);</span><br><span class="line">    glLinkProgram(shaderProgram);</span><br><span class="line">    <span class="comment">// check for linking errors</span></span><br><span class="line">    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &amp;success);</span><br><span class="line">    <span class="keyword">if</span> (!success) &#123;</span><br><span class="line">        glGetProgramInfoLog(shaderProgram, <span class="number">512</span>, <span class="literal">NULL</span>, infoLog);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    glDeleteShader(vertexShader);</span><br><span class="line">    glDeleteShader(fragmentShader);</span><br><span class="line">    <span class="keyword">return</span> shaderProgram;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="绘制"><a href="#绘制" class="headerlink" title="绘制"></a>绘制</h2><p>编译出渲染器之后，得给它数据让它处理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">draw_my_triangle</span><span class="params">(GLFWwindow *window, <span class="type">unsigned</span> <span class="type">int</span> shaderProgram)</span> &#123;</span><br><span class="line">    <span class="type">float</span> vertices[] = &#123;</span><br><span class="line">            <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// left</span></span><br><span class="line">            <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// right</span></span><br><span class="line">            <span class="number">0.0f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>  <span class="comment">// top</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> VBO, VAO;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成VBO，VAO</span></span><br><span class="line">    glGenVertexArrays(<span class="number">1</span>, &amp;VAO);</span><br><span class="line">    glGenBuffers(<span class="number">1</span>, &amp;VBO);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绑定VBO，VAO</span></span><br><span class="line">    glBindVertexArray(VAO);</span><br><span class="line">    glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//写入数据</span></span><br><span class="line">    glBufferData(GL_ARRAY_BUFFER, <span class="keyword">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置数据属性（如何解释数据）</span></span><br><span class="line">    glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">3</span> * <span class="keyword">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span> *) <span class="number">0</span>);</span><br><span class="line">    glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绑定缓冲</span></span><br><span class="line">    glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line">    glBindVertexArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!glfwWindowShouldClose(window)) &#123;</span><br><span class="line">        <span class="comment">// input</span></span><br><span class="line">        <span class="comment">// -----</span></span><br><span class="line">        processInput(window);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// render</span></span><br><span class="line">        <span class="comment">// ------</span></span><br><span class="line">        glClearColor(<span class="number">0.6f</span>, <span class="number">0.7f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">        glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用着色器</span></span><br><span class="line">        glUseProgram(shaderProgram);</span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line">        glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        glfwSwapBuffers(window);</span><br><span class="line">        glfwPollEvents();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// optional: 释放资源</span></span><br><span class="line">    <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">    glDeleteVertexArrays(<span class="number">1</span>, &amp;VAO);</span><br><span class="line">    glDeleteBuffers(<span class="number">1</span>, &amp;VBO);</span><br><span class="line">    glDeleteProgram(shaderProgram);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>VBO是顶点缓冲对象，VAO是顶点数组对象。</p><p>VBO是一块内存，存着很多顶点数据。VAO里存了一堆顶点属性指针，VBO要想切换属性，就需要绑定不同的VAO。</p><h2 id="窗口"><a href="#窗口" class="headerlink" title="窗口"></a>窗口</h2><p>需要调用glfw库。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化glfw库</span></span><br><span class="line">    glfw_init();</span><br><span class="line"><span class="comment">//MacOS</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __APPLE__</span></span><br><span class="line">    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建窗口</span></span><br><span class="line">    GLFWwindow *window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;绘制三角形&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="comment">// 检测窗口</span></span><br><span class="line">    check_window(window);</span><br><span class="line">    <span class="comment">// 设置当前窗口context为主线程</span></span><br><span class="line">    glfwMakeContextCurrent(window);</span><br><span class="line">    <span class="comment">// 设置窗口大小</span></span><br><span class="line">    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);</span><br><span class="line">    <span class="comment">// 加载opengl函数指针</span></span><br><span class="line">    load_opengl_fun_ptr();</span><br><span class="line">    <span class="comment">// 编译着色器</span></span><br><span class="line">    <span class="keyword">auto</span> shaderProgram = compile_shader();</span><br><span class="line">    <span class="comment">// 绘制</span></span><br><span class="line">    draw_my_triangle(window, shaderProgram);</span><br><span class="line">    <span class="comment">// 清除glfw资源</span></span><br><span class="line">    glfwTerminate();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>opengl只能绘制一些简单的东西（图元），点，线，三角形。窗口这种高级的图形是绘制不了的。所以需要第三方库。</p><h2 id="完整代码："><a href="#完整代码：" class="headerlink" title="完整代码："></a>完整代码：</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;glad/glad.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 窗口大小回调函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">framebuffer_size_callback</span><span class="params">(GLFWwindow *, <span class="type">int</span>, <span class="type">int</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按键检测</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">processInput</span><span class="params">(GLFWwindow *)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//glfw初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">glfw_init</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测窗口</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">check_window</span><span class="params">(GLFWwindow *)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载glad</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">load_opengl_fun_ptr</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译着色器</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">compile_shader</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">draw_my_triangle</span><span class="params">(GLFWwindow *window, <span class="type">unsigned</span> <span class="type">int</span> shaderProgram)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义屏幕宽和高</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">int</span> SCR_WIDTH = <span class="number">800</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">int</span> SCR_HEIGHT = <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化glfw库</span></span><br><span class="line">    glfw_init();</span><br><span class="line"><span class="comment">//MacOS</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __APPLE__</span></span><br><span class="line">    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建窗口</span></span><br><span class="line">    GLFWwindow *window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class="string">&quot;绘制三角形&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="comment">// 检测窗口</span></span><br><span class="line">    check_window(window);</span><br><span class="line">    <span class="comment">// 设置当前窗口context为主线程</span></span><br><span class="line">    glfwMakeContextCurrent(window);</span><br><span class="line">    <span class="comment">// 设置窗口大小</span></span><br><span class="line">    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);</span><br><span class="line">    <span class="comment">// 加载opengl函数指针</span></span><br><span class="line">    load_opengl_fun_ptr();</span><br><span class="line">    <span class="comment">// 编译着色器</span></span><br><span class="line">    <span class="keyword">auto</span> shaderProgram = compile_shader();</span><br><span class="line">    <span class="comment">// 绘制</span></span><br><span class="line">    draw_my_triangle(window, shaderProgram);</span><br><span class="line">    <span class="comment">// 清除glfw资源</span></span><br><span class="line">    glfwTerminate();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">processInput</span><span class="params">(GLFWwindow *window)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)</span><br><span class="line">        glfwSetWindowShouldClose(window, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">framebuffer_size_callback</span><span class="params">(GLFWwindow *window, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">    glViewport(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">glfw_init</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// glfw初始化</span></span><br><span class="line">    glfwInit();</span><br><span class="line">    <span class="comment">// glfw主版本号</span></span><br><span class="line">    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">    <span class="comment">// glfw次版本号</span></span><br><span class="line">    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">    <span class="comment">// 使用glfw核心模式</span></span><br><span class="line">    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">check_window</span><span class="params">(GLFWwindow *window)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (window == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Failed to create GLFW window&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        glfwTerminate();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">load_opengl_fun_ptr</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!gladLoadGLLoader((GLADloadproc) glfwGetProcAddress)) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Failed to initialize GLAD&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编译着色器</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">compile_shader</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// glsl源码</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *vertexShaderSource = <span class="string">&quot;#version 330 core\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;layout (location = 0) in vec3 aPos;\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;void main()\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;&#123;\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\n&quot;</span></span><br><span class="line">                                     <span class="string">&quot;&#125;\0&quot;</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *fragmentShaderSource = <span class="string">&quot;#version 330 core\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;out vec4 FragColor;\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;void main()\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;&#123;\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;   FragColor = vec4(0.2f, 0.0f, 0.5f, 1.0f);\n&quot;</span></span><br><span class="line">                                       <span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line">    <span class="comment">// 编译shader</span></span><br><span class="line">    <span class="comment">// ------------------------------------</span></span><br><span class="line">    <span class="comment">// 顶点着色器</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> vertexShader = glCreateShader(GL_VERTEX_SHADER);</span><br><span class="line">    glShaderSource(vertexShader, <span class="number">1</span>, &amp;vertexShaderSource, <span class="literal">NULL</span>);</span><br><span class="line">    glCompileShader(vertexShader);</span><br><span class="line">    <span class="comment">// check for shader compile errors</span></span><br><span class="line">    <span class="type">int</span> success;</span><br><span class="line">    <span class="type">char</span> infoLog[<span class="number">512</span>];</span><br><span class="line">    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &amp;success);</span><br><span class="line">    <span class="keyword">if</span> (!success) &#123;</span><br><span class="line">        glGetShaderInfoLog(vertexShader, <span class="number">512</span>, <span class="literal">NULL</span>, infoLog);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 片段着色器</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class="line">    glShaderSource(fragmentShader, <span class="number">1</span>, &amp;fragmentShaderSource, <span class="literal">NULL</span>);</span><br><span class="line">    glCompileShader(fragmentShader);</span><br><span class="line">    <span class="comment">// check for shader compile errors</span></span><br><span class="line">    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &amp;success);</span><br><span class="line">    <span class="keyword">if</span> (!success) &#123;</span><br><span class="line">        glGetShaderInfoLog(fragmentShader, <span class="number">512</span>, <span class="literal">NULL</span>, infoLog);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 链接</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> shaderProgram = glCreateProgram();</span><br><span class="line">    glAttachShader(shaderProgram, vertexShader);</span><br><span class="line">    glAttachShader(shaderProgram, fragmentShader);</span><br><span class="line">    glLinkProgram(shaderProgram);</span><br><span class="line">    <span class="comment">// check for linking errors</span></span><br><span class="line">    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &amp;success);</span><br><span class="line">    <span class="keyword">if</span> (!success) &#123;</span><br><span class="line">        glGetProgramInfoLog(shaderProgram, <span class="number">512</span>, <span class="literal">NULL</span>, infoLog);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    glDeleteShader(vertexShader);</span><br><span class="line">    glDeleteShader(fragmentShader);</span><br><span class="line">    <span class="keyword">return</span> shaderProgram;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">draw_my_triangle</span><span class="params">(GLFWwindow *window, <span class="type">unsigned</span> <span class="type">int</span> shaderProgram)</span> &#123;</span><br><span class="line">    <span class="type">float</span> vertices[] = &#123;</span><br><span class="line">            <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// left</span></span><br><span class="line">            <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// right</span></span><br><span class="line">            <span class="number">0.0f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>  <span class="comment">// top</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> VBO, VAO;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成VBO，VAO</span></span><br><span class="line">    glGenVertexArrays(<span class="number">1</span>, &amp;VAO);</span><br><span class="line">    glGenBuffers(<span class="number">1</span>, &amp;VBO);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绑定VBO，VAO</span></span><br><span class="line">    glBindVertexArray(VAO);</span><br><span class="line">    glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//写入数据</span></span><br><span class="line">    glBufferData(GL_ARRAY_BUFFER, <span class="keyword">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置数据属性（如何解释数据）</span></span><br><span class="line">    glVertexAttribPointer(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">3</span> * <span class="keyword">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span> *) <span class="number">0</span>);</span><br><span class="line">    glEnableVertexAttribArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绑定缓冲</span></span><br><span class="line">    glBindBuffer(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line">    glBindVertexArray(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!glfwWindowShouldClose(window)) &#123;</span><br><span class="line">        <span class="comment">// input</span></span><br><span class="line">        <span class="comment">// -----</span></span><br><span class="line">        processInput(window);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// render</span></span><br><span class="line">        <span class="comment">// ------</span></span><br><span class="line">        glClearColor(<span class="number">0.6f</span>, <span class="number">0.7f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">        glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用着色器</span></span><br><span class="line">        glUseProgram(shaderProgram);</span><br><span class="line">        glBindVertexArray(VAO);</span><br><span class="line">        glDrawArrays(GL_TRIANGLES, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        glfwSwapBuffers(window);</span><br><span class="line">        glfwPollEvents();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// optional: 释放资源</span></span><br><span class="line">    <span class="comment">// ------------------------------------------------------------------------</span></span><br><span class="line">    glDeleteVertexArrays(<span class="number">1</span>, &amp;VAO);</span><br><span class="line">    glDeleteBuffers(<span class="number">1</span>, &amp;VBO);</span><br><span class="line">    glDeleteProgram(shaderProgram);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="glfw和glad"><a href="#glfw和glad" class="headerlink" title="glfw和glad"></a>glfw和glad</h2><p>下载下来，工程目录里新建<code>include</code>和<code>lib</code>目录，把两个库的头文件放到<code>include</code>目录里，<code>lib</code>里放<code>glfw3.dll</code>,<br><code>libglfw3.a</code>, <code>libglfw3dll.a</code>,把<code>glad.c</code>放在项目根目录。</p><p>CmakeList.txt的内容如下（Windows）：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.27</span>)</span><br><span class="line"><span class="keyword">project</span>(example)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 头文件</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">&quot;./include/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 库</span></span><br><span class="line"><span class="keyword">link_directories</span>(<span class="string">&quot;./lib/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line"><span class="keyword">add_executable</span>(demo triangle.cpp glad.c)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(demo glfw3 gdi32 opengl32)</span><br></pre></td></tr></table></figure><p>最后一行链接<code>gdi32.dll</code>和<code>opengl32.dll</code>，这两个东西在C盘的<code>system32</code>文件夹里。</p><p>效果图：</p><img src="https://images2.imgbox.com/42/20/TybxX3RD_o.png" alt="image host"/>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;渲染流程&quot;&gt;&lt;a href=&quot;#渲染流程&quot; class=&quot;headerlink&quot; title=&quot;渲染流程&quot;&gt;&lt;/a&gt;渲染流程&lt;/h2&gt;&lt;p&gt;先把数据变成二进制，再让GPU解释二进制。把数据变成二进制的过程称为&lt;strong&gt;管线（pipeline）&lt;/strong</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>栈有啥用</title>
    <link href="http://example.com/2024/04/21/%E6%A0%88%E6%9C%89%E5%95%A5%E7%94%A8/"/>
    <id>http://example.com/2024/04/21/%E6%A0%88%E6%9C%89%E5%95%A5%E7%94%A8/</id>
    <published>2024-04-21T13:20:40.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么需要栈"><a href="#为什么需要栈" class="headerlink" title="为什么需要栈"></a>为什么需要栈</h2><p>因为要模拟<strong>回溯</strong>。</p><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>递归从形式上来看，是函数自己调用自己。从具体过程来看，是一个回溯的过程。</p><h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><p>很多技术书上真是惜字如金，微言大义呀，难道是不写的形式化一点就显得自己不专业？您确实挺专业的，但我觉得还有一个专业是<strong>把事情说明白</strong>， 多写点人话。</p><h2 id="实现栈（c）"><a href="#实现栈（c）" class="headerlink" title="实现栈（c）"></a>实现栈（c）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="type">const</span> STACK_INIT_SIZE = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span> STACKINCREMENT = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Stack</span> &#123;</span></span><br><span class="line">    <span class="type">void</span> **base;</span><br><span class="line">    <span class="type">void</span> **top;</span><br><span class="line">    <span class="type">int</span> stackSize;</span><br><span class="line">&#125; Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">init_stack</span><span class="params">(Stack *)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取栈顶元素</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">get_top</span><span class="params">(Stack, <span class="type">void</span> **)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 压栈</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">push</span><span class="params">(Stack *, <span class="type">void</span> *)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 弹栈</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">pop</span><span class="params">(Stack *, <span class="type">void</span> **)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否空栈</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">is_StackEmpty</span><span class="params">(Stack)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// code</span></span><br><span class="line">Status <span class="title function_">init_stack</span><span class="params">(Stack *S)</span> &#123;</span><br><span class="line">    (*S).base = (<span class="type">void</span> **) <span class="built_in">malloc</span>(STACK_INIT_SIZE * <span class="keyword">sizeof</span>(<span class="type">void</span> *));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!(*S).base)</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    (*S).top = (*S).base;</span><br><span class="line">    (*S).stackSize = STACK_INIT_SIZE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">get_top</span><span class="params">(Stack S, <span class="type">void</span> **e)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == S.base) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    *e = *(S.top - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">push</span><span class="params">(Stack *S, <span class="type">void</span> *e)</span> &#123;</span><br><span class="line">    <span class="comment">// 如果栈满，就开辟新空间</span></span><br><span class="line">    <span class="keyword">if</span> ((*S).top - (*S).base &gt;= (*S).stackSize) &#123;</span><br><span class="line">        (*S).base = (<span class="type">void</span> **) <span class="built_in">realloc</span>((*S).base, ((*S).stackSize + STACKINCREMENT) * <span class="keyword">sizeof</span>(<span class="type">void</span> *));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(*S).base) &#123;</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        (*S).top = (*S).base + (*S).stackSize;</span><br><span class="line">        (*S).stackSize = (*S).stackSize + STACKINCREMENT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    *(S-&gt;top) = e;</span><br><span class="line">    (S-&gt;top)++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Status <span class="title function_">pop</span><span class="params">(Stack *S, <span class="type">void</span>**e)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ((*S).top == (*S).base)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    (*S).top--;</span><br><span class="line">    *e = *((*S).top);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">is_StackEmpty</span><span class="params">(Stack S)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top==S.base)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="遍历二叉树"><a href="#遍历二叉树" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h2><p>二叉树的遍历也是一个回溯的过程，直接用递归来实现二叉树遍历是容易理解的，也可以用栈来实现。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">inorder_travese</span><span class="params">(BinaryTree T)</span></span><br><span class="line">&#123;</span><br><span class="line">    Stack S;</span><br><span class="line">    BinaryTree root = T;</span><br><span class="line">    BinaryTree node;</span><br><span class="line"></span><br><span class="line">    init_stack(&amp;S);</span><br><span class="line">    node = (BinaryTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BinaryTreeNode));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (root || !is_StackEmpty(S))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (root)</span><br><span class="line">        &#123;</span><br><span class="line">            push(&amp;S, root);   <span class="comment">// 根节点进栈</span></span><br><span class="line">            root = root-&gt;Lchild; <span class="comment">// 访问左子树</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            pop(&amp;S, &amp;node);     <span class="comment">// 退栈</span></span><br><span class="line">            <span class="built_in">printf</span>(node-&gt;data); <span class="comment">// 访问根节点</span></span><br><span class="line">            root = node-&gt;Rchild;   <span class="comment">// 访问右子树</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么需要栈&quot;&gt;&lt;a href=&quot;#为什么需要栈&quot; class=&quot;headerlink&quot; title=&quot;为什么需要栈&quot;&gt;&lt;/a&gt;为什么需要栈&lt;/h2&gt;&lt;p&gt;因为要模拟&lt;strong&gt;回溯&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;递归&quot;&gt;&lt;a href=&quot;#递归</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>二叉树</title>
    <link href="http://example.com/2024/04/20/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://example.com/2024/04/20/%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2024-04-20T09:41:22.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么需要二叉树"><a href="#为什么需要二叉树" class="headerlink" title="为什么需要二叉树"></a>为什么需要二叉树</h2><p>因为要<strong>模拟递归</strong>。</p><h2 id="编程是在干嘛？"><a href="#编程是在干嘛？" class="headerlink" title="编程是在干嘛？"></a>编程是在干嘛？</h2><p>编程是在<strong>管理</strong>数据，问题在于怎么个管理法。管理着管理着就发现原来管理本身就是数据。<br>写代码的过程就是一个递归的过程:</p><pre>function coding(){   if (NoError){       done   } else {       coding(change_some_codes)   } }</pre><p>所以我喜欢git这种东西，这是在模拟人在编码过程中不断后退重来的困境。</p><h2 id="二叉树实现（c）"><a href="#二叉树实现（c）" class="headerlink" title="二叉树实现（c）"></a>二叉树实现（c）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">void</span> *data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">BinaryTreeNode</span> *<span class="title">Lchild</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">BinaryTreeNode</span> *<span class="title">Rchild</span>;</span></span><br><span class="line">&#125; BinaryTreeNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> BinaryTreeNode *BinaryTree;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化</span></span><br><span class="line"><span class="comment"> * @param T </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">init_binaryTree</span><span class="params">(BinaryTree *T)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建</span></span><br><span class="line"><span class="comment"> * @param T </span></span><br><span class="line"><span class="comment"> * @return </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">create_binaryTree</span><span class="params">(BinaryTree *T)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打印</span></span><br><span class="line"><span class="comment"> * @param e </span></span><br><span class="line"><span class="comment"> * @return </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">print_element</span><span class="params">(<span class="type">void</span> *e)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 遍历</span></span><br><span class="line"><span class="comment"> * @param T </span></span><br><span class="line"><span class="comment"> * @param visit </span></span><br><span class="line"><span class="comment"> * @return </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">traverse</span><span class="params">(BinaryTree T, Status (*visit)(<span class="type">void</span> *))</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 复制</span></span><br><span class="line"><span class="comment"> * @param T </span></span><br><span class="line"><span class="comment"> * @param newT </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy</span><span class="params">(BinaryTree T, BinaryTree *newT)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 深度</span></span><br><span class="line"><span class="comment"> * @param T </span></span><br><span class="line"><span class="comment"> * @return </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">depth</span><span class="params">(BinaryTree T)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节点个数</span></span><br><span class="line"><span class="comment"> * @param T </span></span><br><span class="line"><span class="comment"> * @return </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">count_node</span><span class="params">(BinaryTree T)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">init_binaryTree</span><span class="params">(BinaryTree *T)</span> &#123;</span><br><span class="line">    *T = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">create_binaryTree</span><span class="params">(BinaryTree *T)</span> &#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(&amp;ch);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ch == <span class="string">&#x27;^&#x27;</span>) &#123;</span><br><span class="line">        *T = <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        *T = (BinaryTree) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BinaryTree));</span><br><span class="line">        <span class="keyword">if</span> (!(*T))</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">        (*T)-&gt;data = (<span class="type">void</span> *) ch;</span><br><span class="line">        create_binaryTree(&amp;(*T)-&gt;Lchild);</span><br><span class="line">        create_binaryTree(&amp;(*T)-&gt;Rchild);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">print_element</span><span class="params">(<span class="type">void</span> *e)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">traverse</span><span class="params">(BinaryTree T, Status (*visit)(<span class="type">void</span> *))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (T) &#123;</span><br><span class="line">        <span class="keyword">if</span> (visit(T-&gt;data)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (traverse(T-&gt;Lchild, visit)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (traverse(T-&gt;Rchild, visit)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy</span><span class="params">(BinaryTree T, BinaryTree *newT)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        (*newT) = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        (*newT) = (BinaryTree) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BinaryTreeNode));</span><br><span class="line">        (*newT)-&gt;data = T-&gt;data;</span><br><span class="line">        copy(T-&gt;Lchild, (*newT)-&gt;Lchild);</span><br><span class="line">        copy(T-&gt;Rchild, (*newT)-&gt;Rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">depth</span><span class="params">(BinaryTree T)</span> &#123;</span><br><span class="line">    <span class="type">int</span> m, n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        m = depth(T-&gt;Lchild);</span><br><span class="line">        n = depth(T-&gt;Rchild);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (m &gt; n)</span><br><span class="line">            <span class="keyword">return</span> m + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> n + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">count_node</span><span class="params">(BinaryTree T)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> count_node(T-&gt;Lchild) + count_node(T-&gt;Rchild) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么需要二叉树&quot;&gt;&lt;a href=&quot;#为什么需要二叉树&quot; class=&quot;headerlink&quot; title=&quot;为什么需要二叉树&quot;&gt;&lt;/a&gt;为什么需要二叉树&lt;/h2&gt;&lt;p&gt;因为要&lt;strong&gt;模拟递归&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;编程是在干嘛？&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>单链表</title>
    <link href="http://example.com/2024/04/19/%E5%8D%95%E9%93%BE%E8%A1%A8/"/>
    <id>http://example.com/2024/04/19/%E5%8D%95%E9%93%BE%E8%A1%A8/</id>
    <published>2024-04-19T04:34:14.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么单链表是数据结构的基础？"><a href="#为什么单链表是数据结构的基础？" class="headerlink" title="为什么单链表是数据结构的基础？"></a>为什么单链表是数据结构的基础？</h2><p>因为要模拟自然数集合的性质，一个前驱一个后继。<br>是在<strong>模拟穷举</strong>这个过程。</p><h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><p>看到有些书解释为什么要弄出个单链表，说因为需要容器，单链表是个容器。这种解释真是很让人无语，容器多了去了，数组不是个容器？</p><p>每个编程语言都有自己内置的容器，JavaScript内置数组和哈希表，python内置列表字典元组啥的，我还是喜欢PHP的内置容器，一个哈希表解决所有。</p><h2 id="c语言实现链表"><a href="#c语言实现链表" class="headerlink" title="c语言实现链表"></a>c语言实现链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"></span><br><span class="line"><span class="comment">//节点</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">void</span> *data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; Node;</span><br><span class="line"></span><br><span class="line"><span class="comment">//链表</span></span><br><span class="line"><span class="keyword">typedef</span> Node *Link_list;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化链表</span></span><br><span class="line"><span class="comment"> * @param L </span></span><br><span class="line"><span class="comment"> * @return Status</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">init_link_list</span><span class="params">(Link_list *L)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改节点数据</span></span><br><span class="line"><span class="comment"> * @param L </span></span><br><span class="line"><span class="comment"> * @param i </span></span><br><span class="line"><span class="comment"> * @param elm </span></span><br><span class="line"><span class="comment"> * @return Status</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">update_elem</span><span class="params">(Link_list L, <span class="type">int</span> i, <span class="type">void</span> **elm)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查找</span></span><br><span class="line"><span class="comment"> * @param L</span></span><br><span class="line"><span class="comment"> * @param e</span></span><br><span class="line"><span class="comment"> * @return Node</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Node *<span class="title function_">find_elem</span><span class="params">(Link_list *L, <span class="type">void</span> *elm)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 插入</span></span><br><span class="line"><span class="comment"> * @param L</span></span><br><span class="line"><span class="comment"> * @param i</span></span><br><span class="line"><span class="comment"> * @param elm</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">insert_list</span><span class="params">(Link_list *L, <span class="type">int</span> i, <span class="type">void</span> *elm)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除</span></span><br><span class="line"><span class="comment"> * @param L</span></span><br><span class="line"><span class="comment"> * @param i</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">delete_node</span><span class="params">(Link_list *L, <span class="type">int</span> i)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建链表</span></span><br><span class="line"><span class="comment"> * @param L</span></span><br><span class="line"><span class="comment"> * @param n</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">create_list</span><span class="params">(Link_list *L, <span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* code */</span></span><br><span class="line">Status <span class="title function_">init_link_list</span><span class="params">(Link_list *L)</span> &#123;</span><br><span class="line">    (*L) = (Link_list) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">    (*L)-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">update_elem</span><span class="params">(Link_list L, <span class="type">int</span> i, <span class="type">void</span> **elm)</span> &#123;</span><br><span class="line">    Link_list ptr = L-&gt;next;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历</span></span><br><span class="line">    <span class="keyword">while</span> (ptr &amp;&amp; j &lt; i) &#123;</span><br><span class="line">        j++;</span><br><span class="line">        ptr = ptr-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ptr || j &gt; i) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    *elm = ptr-&gt;data;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node *<span class="title function_">find_elem</span><span class="params">(Link_list *L, <span class="type">void</span> *elm)</span> &#123;</span><br><span class="line">    Link_list ptr = (*L)-&gt;next;</span><br><span class="line">    <span class="comment">//遍历</span></span><br><span class="line">    <span class="keyword">while</span> (ptr &amp;&amp; ptr-&gt;data != elm) &#123;</span><br><span class="line">        ptr = ptr-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">insert_list</span><span class="params">(Link_list *L, <span class="type">int</span> i, <span class="type">void</span> *elm)</span> &#123;</span><br><span class="line">    Link_list p = *L;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p &amp;&amp; (j &lt; i - <span class="number">1</span>)) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!p || j &gt; i - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Link_list node = (Link_list) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line"></span><br><span class="line">    node-&gt;data = elm;</span><br><span class="line">    node-&gt;next = p-&gt;next;</span><br><span class="line">    p-&gt;next = node;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">delete_node</span><span class="params">(Link_list *L, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">    Link_list p = *L;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((p-&gt;next) &amp;&amp; (j &lt; i - <span class="number">1</span>)) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!p || j &gt; i - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Link_list node = p-&gt;next;</span><br><span class="line"></span><br><span class="line">    p-&gt;next = node-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(node);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">create_list</span><span class="params">(Link_list *L, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    *L = (Link_list) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">    (*L)-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">void</span> *tmp;</span><br><span class="line">        Link_list q;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%p&quot;</span>, &amp;tmp) == <span class="number">1</span>) &#123;</span><br><span class="line">            Link_list node = (Link_list) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">            node-&gt;data = tmp; <span class="comment">// 录入数据</span></span><br><span class="line">            q-&gt;next = node;   <span class="comment">// 后插节点</span></span><br><span class="line">            q = q-&gt;next;   <span class="comment">// 指针后移</span></span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么单链表是数据结构的基础？&quot;&gt;&lt;a href=&quot;#为什么单链表是数据结构的基础？&quot; class=&quot;headerlink&quot; title=&quot;为什么单链表是数据结构的基础？&quot;&gt;&lt;/a&gt;为什么单链表是数据结构的基础？&lt;/h2&gt;&lt;p&gt;因为要模拟自然数集合的性质，一个前驱</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>C语言动态数组的创建</title>
    <link href="http://example.com/2024/04/14/C%E8%AF%AD%E8%A8%80%E6%95%B0%E7%BB%84d%E7%9A%84%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D/"/>
    <id>http://example.com/2024/04/14/C%E8%AF%AD%E8%A8%80%E6%95%B0%E7%BB%84d%E7%9A%84%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D/</id>
    <published>2024-04-14T13:59:19.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内存地址不连续"><a href="#内存地址不连续" class="headerlink" title="内存地址不连续"></a>内存地址不连续</h2><p>创建动态数组，如果是用for循环嵌套的话，创建出来的数组地址不连续，比如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------分配出来的数组地址不连续-----------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">delete_array</span><span class="params">(<span class="type">int</span> **p, <span class="type">size_t</span> dim1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> **<span class="title">create_array</span><span class="params">(<span class="type">size_t</span> dim1, <span class="type">size_t</span> dim2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> **m;</span><br><span class="line">    m = <span class="built_in">create_array</span>(ROW, COL);</span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; ROW; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; COL; j++) &#123;</span><br><span class="line">            m[i][j] = i + j;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">// 打印</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;m[%d] = %p\n&quot;</span>, i, m[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;&amp;m[%d][%d] = %p; m[%d][%d] = %d\n&quot;</span>, i, j, &amp;(m[i][j]), i, j, m[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delete_array</span>(m, ROW);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> **<span class="title">create_array</span><span class="params">(<span class="type">size_t</span> dim1, <span class="type">size_t</span> dim2)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> **p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((p = (<span class="type">int</span> **) <span class="built_in">malloc</span>(dim1 * <span class="built_in">sizeof</span>(<span class="type">int</span> *))) == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; dim1; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((p[i] = (<span class="type">int</span> *) <span class="built_in">malloc</span>(dim2 * <span class="built_in">sizeof</span>(<span class="type">int</span>))) == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">delete_array</span><span class="params">(<span class="type">int</span> **p, <span class="type">size_t</span> dim1)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; dim1; i++) &#123;</span><br><span class="line">        <span class="built_in">free</span>(p[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果,行与行之间地址不连续：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">m[0] = 0000018e68931460</span><br><span class="line">&amp;m[0][0] = 0000018e68931460; m[0][0] = 0</span><br><span class="line">&amp;m[0][1] = 0000018e68931464; m[0][1] = 1</span><br><span class="line">&amp;m[0][2] = 0000018e68931468; m[0][2] = 2</span><br><span class="line"></span><br><span class="line">m[1] = 0000018e68931480</span><br><span class="line">&amp;m[1][0] = 0000018e68931480; m[1][0] = 1</span><br><span class="line">&amp;m[1][1] = 0000018e68931484; m[1][1] = 2</span><br><span class="line">&amp;m[1][2] = 0000018e68931488; m[1][2] = 3</span><br></pre></td></tr></table></figure><p>内存不连续导致 <code>*(*(a+i)+j)</code> 的值就不等于 <code>a[i][j]</code> 了。</p><h2 id="让它连续"><a href="#让它连续" class="headerlink" title="让它连续"></a>让它连续</h2><p>修改create_array函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> **<span class="title">create_array</span><span class="params">(<span class="type">size_t</span> dim1, <span class="type">size_t</span> dim2)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> **p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((p = (<span class="type">int</span> **) <span class="built_in">malloc</span>(dim1 * <span class="built_in">sizeof</span>(<span class="type">int</span> *))) == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((p[<span class="number">0</span>] = (<span class="type">int</span> *) <span class="built_in">malloc</span>(dim1 * dim2 * <span class="built_in">sizeof</span>(<span class="type">int</span>))) == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">1</span>; i &lt; dim1; i++)</span><br><span class="line">        p[i] = p[i - <span class="number">1</span>] + dim2; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> **<span class="title">create_array</span><span class="params">(<span class="type">size_t</span> dim1, <span class="type">size_t</span> dim2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">delete_array</span><span class="params">(<span class="type">int</span> **m)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> **m = <span class="built_in">create_array</span>(ROW, COL);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; j++) &#123;</span><br><span class="line">            m[i][j] = i + j;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> *start = *m;</span><br><span class="line">    <span class="type">int</span> *<span class="type">const</span> end = start + ROW * COL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (; start != end; start++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%p -&gt; %d\n&quot;</span>, start, *start);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delete_array</span>(m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> **<span class="title">create_array</span><span class="params">(<span class="type">size_t</span> dim1, <span class="type">size_t</span> dim2)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> **p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((p = (<span class="type">int</span> **) <span class="built_in">malloc</span>(dim1 * <span class="built_in">sizeof</span>(<span class="type">int</span> *))) == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((p[<span class="number">0</span>] = (<span class="type">int</span> *) <span class="built_in">malloc</span>(dim1 * dim2 * <span class="built_in">sizeof</span>(<span class="type">int</span>))) == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">1</span>; i &lt; dim1; i++)</span><br><span class="line">        p[i] = p[i - <span class="number">1</span>] + dim2; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">delete_array</span><span class="params">(<span class="type">int</span> **m)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">free</span>(m[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">free</span>(m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0000010618531470 -&gt; 0</span><br><span class="line">0000010618531474 -&gt; 1</span><br><span class="line">0000010618531478 -&gt; 1</span><br><span class="line">000001061853147c -&gt; 2</span><br><span class="line">0000010618531480 -&gt; 2</span><br><span class="line">0000010618531484 -&gt; 3</span><br></pre></td></tr></table></figure><p>这样就连续了。</p><h2 id="创建多维数组"><a href="#创建多维数组" class="headerlink" title="创建多维数组"></a>创建多维数组</h2><p>多维数组空间的分配同理：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">float</span> ***<span class="title">create_multi_array</span><span class="params">(<span class="type">int</span> dim1, <span class="type">int</span> dim2, <span class="type">int</span> dim3)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> ***ptr = (<span class="type">float</span> ***) <span class="built_in">malloc</span>(dim1 * <span class="built_in">sizeof</span>(<span class="type">float</span> **) +</span><br><span class="line">                                      dim1 * dim2 * <span class="built_in">sizeof</span>(<span class="type">float</span> *) +</span><br><span class="line">                                      dim1 * dim2 * dim3 * <span class="built_in">sizeof</span>(<span class="type">float</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; dim1; ++i) &#123;</span><br><span class="line">        ptr[i] = (<span class="type">float</span> **) (ptr + dim1) + i * dim2; </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; dim2; ++j)</span><br><span class="line">            ptr[i][j] = (<span class="type">float</span> *) (ptr + dim1 + dim1 * dim2) + i * dim2 * dim3 + j * dim3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ptr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内存地址不连续&quot;&gt;&lt;a href=&quot;#内存地址不连续&quot; class=&quot;headerlink&quot; title=&quot;内存地址不连续&quot;&gt;&lt;/a&gt;内存地址不连续&lt;/h2&gt;&lt;p&gt;创建动态数组，如果是用for循环嵌套的话，创建出来的数组地址不连续，比如：&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>小而美的语言</title>
    <link href="http://example.com/2024/04/12/%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2024/04/12/%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AE%BE%E8%AE%A1/</id>
    <published>2024-04-12T15:24:33.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<p>读了c++之父Bjarne Stroustrup的一段话，“如何决定哪些是库，哪些是语言特性是语言设计的艺术。”这种看法是相当平和的做法，但是larry wall（perl之父）比较激进一些，他觉得应该尽可能把所有的“语言特性”当作库。</p><p>这两种看法容易带来一个区别，就是小而美和大而全。以我个人的倾向还是小而美更好一些。回想在学习编程语言的时候，很容易被现代编程语言那些繁多的特性搞乱套，而且会误以为学习这些语言特性就是在学习编程。若这样想，那就错失正确的方向了。</p><p>现在网上还充斥着很多讲解语言特性的文章，这些东西会给人一种假装技术文章的错觉，真正的技术却避而不谈，我想，所有的初学者无非就是想做点东西，但是看这些玩意只会越来越困惑。对于语言学习，我的态度是“不求甚解”，除非你要自己做一个语言，否则我不太想把精力浪费在语言上。 对我来说，没有什么最好的编程语言，因为我在思考的时候并不用任何编程语言思考。</p><p>小而美带来的问题就是分散，降低效率。人们不愿意在一堆杂货铺里寻找合适的东西，觉得这是浪费时间。我也觉得是，但是，还能有更好的方法吗？</p><p>大而全带来的问题是控制欲太强，什么东西的添加都得靠语言的作者们，或公司。这种模式会带来利益，同时，也丧失了生命力。</p><p>我不知道什么是正确的做法，当然，这个问题跟编程语言没啥关系。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;读了c++之父Bjarne Stroustrup的一段话，“如何决定哪些是库，哪些是语言特性是语言设计的艺术。”这种看法是相当平和的做法，但是larry wall（perl之父）比较激进一些，他觉得应该尽可能把所有的“语言特性”当作库。&lt;/p&gt;
&lt;p&gt;这两种看法容易带来一个</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>next教程（五）</title>
    <link href="http://example.com/2024/04/07/next%E6%95%99%E7%A8%8B%E4%BA%94/"/>
    <id>http://example.com/2024/04/07/next%E6%95%99%E7%A8%8B%E4%BA%94/</id>
    <published>2024-04-07T13:29:16.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h2><p>新建页面：<br>增：<code>app/dashboard/invoices/page.tsx</code>,<br>改：<code>app/dashboard/invoices/[id]/edit/page.tsx</code>,</p><p>把<code>app/ui/invoices/buttons.tsx</code>文件中的href或form的action改为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PencilIcon</span>, <span class="title class_">PlusIcon</span>, <span class="title class_">TrashIcon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@heroicons/react/24/outline&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Link</span> <span class="keyword">from</span> <span class="string">&#x27;next/link&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; deleteInvoice &#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/lib/actions&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">CreateInvoice</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Link</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">href</span>=<span class="string">&quot;/dashboard/invoices/create&quot;</span> //<span class="attr">修改url</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">className</span>=<span class="string">&quot;flex h-10 items-center rounded-lg bg-blue-600 px-4 text-sm font-medium text-white transition-colors hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;hidden md:block&quot;</span>&gt;</span>Create Invoice<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#x27; &#x27;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">PlusIcon</span> <span class="attr">className</span>=<span class="string">&quot;h-5 md:ml-4&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">UpdateInvoice</span>(<span class="params">&#123; id &#125;: &#123; id: string &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Link</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">href</span>=<span class="string">&#123;</span>`/<span class="attr">dashboard</span>/<span class="attr">invoices</span>/$&#123;<span class="attr">id</span>&#125;/<span class="attr">edit</span>`&#125; //<span class="attr">修改url</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&quot;rounded-md border p-2 hover:bg-gray-100&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">PencilIcon</span> <span class="attr">className</span>=<span class="string">&quot;w-5&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">DeleteInvoice</span>(<span class="params">&#123; id &#125;: &#123; id: string &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> deleteInvoiceWithId = deleteInvoice.<span class="title function_">bind</span>(<span class="literal">null</span>, id);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">      <span class="comment">//修改url</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&#123;deleteInvoiceWithId&#125;</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;rounded-md border p-2 hover:bg-gray-100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">TrashIcon</span> <span class="attr">className</span>=<span class="string">&quot;w-5&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>/lib/</code>目录下新建<code>actions.ts</code>文件:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use server&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;z&#125; <span class="keyword">from</span> <span class="string">&#x27;zod&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;sql&#125; <span class="keyword">from</span> <span class="string">&#x27;@vercel/postgres&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; revalidatePath &#125; <span class="keyword">from</span> <span class="string">&#x27;next/cache&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; redirect &#125; <span class="keyword">from</span> <span class="string">&#x27;next/navigation&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FormSchema</span> = z.<span class="title function_">object</span>(&#123;</span><br><span class="line">    <span class="attr">id</span>: z.<span class="title function_">string</span>(),</span><br><span class="line">    <span class="attr">customerId</span>: z.<span class="title function_">string</span>(),</span><br><span class="line">    <span class="attr">amount</span>: z.<span class="property">coerce</span>.<span class="title function_">number</span>(),</span><br><span class="line">    <span class="attr">status</span>: z.<span class="title function_">enum</span>([<span class="string">&#x27;pending&#x27;</span>, <span class="string">&#x27;paid&#x27;</span>]),</span><br><span class="line">    <span class="attr">date</span>: z.<span class="title function_">string</span>(),</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//增</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CreateInvoice</span> = <span class="title class_">FormSchema</span>.<span class="title function_">omit</span>(&#123;<span class="attr">id</span>: <span class="literal">true</span>, <span class="attr">date</span>: <span class="literal">true</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">createInvoice</span>(<span class="params">formData: FormData</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;customerId, amount, status&#125; = <span class="title class_">CreateInvoice</span>.<span class="title function_">parse</span>(&#123;</span><br><span class="line">        <span class="attr">customerId</span>: formData.<span class="title function_">get</span>(<span class="string">&#x27;customerId&#x27;</span>),</span><br><span class="line">        <span class="attr">amount</span>: formData.<span class="title function_">get</span>(<span class="string">&#x27;amount&#x27;</span>),</span><br><span class="line">        <span class="attr">status</span>: formData.<span class="title function_">get</span>(<span class="string">&#x27;status&#x27;</span>),</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> amountInCents = amount * <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>().<span class="title function_">split</span>(<span class="string">&#x27;T&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> sql<span class="string">`</span></span><br><span class="line"><span class="string">        INSERT INTO invoices (customer_id, amount, status, date)</span></span><br><span class="line"><span class="string">        VALUES (<span class="subst">$&#123;customerId&#125;</span>, <span class="subst">$&#123;amountInCents&#125;</span>, <span class="subst">$&#123;status&#125;</span>, <span class="subst">$&#123;date&#125;</span>)</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;Database Error: Failed to Create Invoice.&#x27;</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">revalidatePath</span>(<span class="string">&#x27;/dashboard/invoices&#x27;</span>);</span><br><span class="line">    <span class="title function_">redirect</span>(<span class="string">&#x27;/dashboard/invoices&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//改</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UpdateInvoice</span> = <span class="title class_">FormSchema</span>.<span class="title function_">omit</span>(&#123; <span class="attr">id</span>: <span class="literal">true</span>, <span class="attr">date</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">updateInvoice</span>(<span class="params">id: string, formData: FormData</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; customerId, amount, status &#125; = <span class="title class_">UpdateInvoice</span>.<span class="title function_">parse</span>(&#123;</span><br><span class="line">        <span class="attr">customerId</span>: formData.<span class="title function_">get</span>(<span class="string">&#x27;customerId&#x27;</span>),</span><br><span class="line">        <span class="attr">amount</span>: formData.<span class="title function_">get</span>(<span class="string">&#x27;amount&#x27;</span>),</span><br><span class="line">        <span class="attr">status</span>: formData.<span class="title function_">get</span>(<span class="string">&#x27;status&#x27;</span>),</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> amountInCents = amount * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> sql<span class="string">`</span></span><br><span class="line"><span class="string">        UPDATE invoices</span></span><br><span class="line"><span class="string">        SET customer_id = <span class="subst">$&#123;customerId&#125;</span>, amount = <span class="subst">$&#123;amountInCents&#125;</span>, status = <span class="subst">$&#123;status&#125;</span></span></span><br><span class="line"><span class="string">        WHERE id = <span class="subst">$&#123;id&#125;</span></span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">message</span>: <span class="string">&#x27;Database Error: Failed to Update Invoice.&#x27;</span> &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">revalidatePath</span>(<span class="string">&#x27;/dashboard/invoices&#x27;</span>);</span><br><span class="line">    <span class="title function_">redirect</span>(<span class="string">&#x27;/dashboard/invoices&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">deleteInvoice</span>(<span class="params">id: string</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> sql<span class="string">`DELETE FROM invoices WHERE id = <span class="subst">$&#123;id&#125;</span>`</span>;</span><br><span class="line">        <span class="title function_">revalidatePath</span>(<span class="string">&#x27;/dashboard/invoices&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">message</span>: <span class="string">&#x27;Deleted Invoice&#x27;</span> &#125;;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">message</span>: <span class="string">&#x27;Database Error: Failed to Delete Invoice.&#x27;</span> &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="错误页面"><a href="#错误页面" class="headerlink" title="错误页面"></a>错误页面</h2><p>新建<code>app/dashboard/invoices/error.tsx</code>文件，写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use client&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Error</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">                                  error,</span></span><br><span class="line"><span class="params">                                  reset,</span></span><br><span class="line"><span class="params">                              &#125;: &#123;</span></span><br><span class="line"><span class="params">    error: <span class="built_in">Error</span> &amp; &#123; digest?: string &#125;;</span></span><br><span class="line"><span class="params">    reset: () =&gt; <span class="keyword">void</span>;</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// Optionally log the error to an error reporting service</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">    &#125;, [error]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">main</span> <span class="attr">className</span>=<span class="string">&quot;flex h-full flex-col items-center justify-center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">className</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>Something went wrong!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">className</span>=<span class="string">&quot;mt-4 rounded-md bg-blue-500 px-4 py-2 text-sm text-white transition-colors hover:bg-blue-400&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">onClick</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    // <span class="attr">Attempt</span> <span class="attr">to</span> <span class="attr">recover</span> <span class="attr">by</span> <span class="attr">trying</span> <span class="attr">to</span> <span class="attr">re-render</span> <span class="attr">the</span> <span class="attr">invoices</span> <span class="attr">route</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    () =&gt;</span> reset()</span></span><br><span class="line"><span class="language-xml">                &#125;</span></span><br><span class="line"><span class="language-xml">            &gt;</span></span><br><span class="line"><span class="language-xml">                Try again</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建<code>app/dashboard/invoices/[id]/edit/not-found.tsx</code>文件，写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Link</span> <span class="keyword">from</span> <span class="string">&#x27;next/link&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FaceFrownIcon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@heroicons/react/24/outline&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">NotFound</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">main</span> <span class="attr">className</span>=<span class="string">&quot;flex h-full flex-col items-center justify-center gap-2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">FaceFrownIcon</span> <span class="attr">className</span>=<span class="string">&quot;w-10 text-gray-400&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">className</span>=<span class="string">&quot;text-xl font-semibold&quot;</span>&gt;</span>404 Not Found<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Could not find the requested invoice.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Link</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">href</span>=<span class="string">&quot;/dashboard/invoices&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">className</span>=<span class="string">&quot;mt-4 rounded-md bg-blue-500 px-4 py-2 text-sm text-white transition-colors hover:bg-blue-400&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">                Go Back</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;增删改查&quot;&gt;&lt;a href=&quot;#增删改查&quot; class=&quot;headerlink&quot; title=&quot;增删改查&quot;&gt;&lt;/a&gt;增删改查&lt;/h2&gt;&lt;p&gt;新建页面：&lt;br&gt;增：&lt;code&gt;app/dashboard/invoices/page.tsx&lt;/code&gt;,&lt;br&gt;改：</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>next教程（四）</title>
    <link href="http://example.com/2024/04/06/next%E6%95%99%E7%A8%8B%E5%9B%9B/"/>
    <id>http://example.com/2024/04/06/next%E6%95%99%E7%A8%8B%E5%9B%9B/</id>
    <published>2024-04-06T10:41:17.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="动态渲染"><a href="#动态渲染" class="headerlink" title="动态渲染"></a>动态渲染</h2><p>对那些需要实时更新的页面采用动态渲染，在<code>data.tsx</code>里写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; unstable_noStore <span class="keyword">as</span> noStore &#125; <span class="keyword">from</span> <span class="string">&#x27;next/cache&#x27;</span>;</span><br></pre></td></tr></table></figure><p>导入unstable_noStore这个函数，然后在fetchRevenue ，fetchLatestInvoices，fetchCardData，fetchFilteredInvoices，fetchInvoiceById，fetchFilteredCustomers这几个函数里调用。</p><h2 id="流传输"><a href="#流传输" class="headerlink" title="流传输"></a>流传输</h2><p>动态渲染带来的问题就是，应用会等待最慢的那个函数获取数据。然后<strong>一次性</strong>显示。流传输就是让它分解为块，一块一块的传输。<br>整个页面流传输，需要创建一个<code>loading.tsx</code>文件，比如创建一个<code>app/dashboard/loading.tsx</code>,写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">DashboardSkeleton</span> <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/skeletons&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Loading</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">DashboardSkeleton</span> /&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在dashboard目录内创建这个文件将会影响所有页面，这时候可以使用路由分组，就是新建一个名字带括号的目录。比如新建<br><code>app\dashboard\(overview)\</code>目录,把<code>loading.tsx</code>,<code>page.tsx</code>放到这个目录里。</p><p>组件流传输：参考react的suspend组件用法。</p><h2 id="发票页面添加搜索"><a href="#发票页面添加搜索" class="headerlink" title="发票页面添加搜索"></a>发票页面添加搜索</h2><p>在<code>app/dashboard/invoices/page.tsx</code>文件中写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Pagination</span> <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/invoices/pagination&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Search</span> <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/search&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Table</span> <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/invoices/table&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">CreateInvoice</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/invoices/buttons&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;lusitana&#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/fonts&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">InvoicesTableSkeleton</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/skeletons&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Suspense</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">Page</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">                                       searchParams,</span></span><br><span class="line"><span class="params">                                   &#125;: &#123;</span></span><br><span class="line"><span class="params">    searchParams?: &#123;</span></span><br><span class="line"><span class="params">        query?: string;</span></span><br><span class="line"><span class="params">        page?: string;</span></span><br><span class="line"><span class="params">    &#125;;</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> query = searchParams?.<span class="property">query</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> currentPage = <span class="title class_">Number</span>(searchParams?.<span class="property">page</span>) || <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;w-full&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex w-full items-center justify-between&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">lusitana.className</span>&#125; <span class="attr">text-2xl</span>`&#125;&gt;</span>Invoices<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;mt-4 flex items-center justify-between gap-2 md:mt-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Search</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search invoices...&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">CreateInvoice</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Suspense</span> <span class="attr">key</span>=<span class="string">&#123;query</span> + <span class="attr">currentPage</span>&#125; <span class="attr">fallback</span>=<span class="string">&#123;</span>&lt;<span class="attr">InvoicesTableSkeleton</span>/&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Table</span> <span class="attr">query</span>=<span class="string">&#123;query&#125;</span> <span class="attr">currentPage</span>=<span class="string">&#123;currentPage&#125;/</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;mt-5 flex w-full justify-center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                &#123;/* <span class="tag">&lt;<span class="name">Pagination</span> <span class="attr">totalPages</span>=<span class="string">&#123;totalPages&#125;</span> /&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>app/ui/search.tsx</code>文件中写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use client&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">MagnifyingGlassIcon</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@heroicons/react/24/outline&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useSearchParams,usePathname, useRouter&#125; <span class="keyword">from</span> <span class="string">&#x27;next/navigation&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useDebouncedCallback &#125; <span class="keyword">from</span> <span class="string">&#x27;use-debounce&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Search</span>(<span class="params">&#123;placeholder&#125;: &#123; placeholder: string &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> searchParams = <span class="title function_">useSearchParams</span>();</span><br><span class="line">    <span class="keyword">const</span> pathname = <span class="title function_">usePathname</span>();</span><br><span class="line">    <span class="keyword">const</span> &#123; replace &#125; = <span class="title function_">useRouter</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> handleSearch = <span class="title function_">useDebouncedCallback</span>(<span class="function">(<span class="params">term</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Searching... <span class="subst">$&#123;term&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(searchParams);</span><br><span class="line">        <span class="keyword">if</span> (term) &#123;</span><br><span class="line">            params.<span class="title function_">set</span>(<span class="string">&#x27;query&#x27;</span>, term);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            params.<span class="title function_">delete</span>(<span class="string">&#x27;query&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">replace</span>(<span class="string">`<span class="subst">$&#123;pathname&#125;</span>?<span class="subst">$&#123;params.toString()&#125;</span>`</span>);</span><br><span class="line">    &#125;, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;relative flex flex-1 flex-shrink-0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;search&quot;</span> <span class="attr">className</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                搜索</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">className</span>=<span class="string">&quot;peer block w-full rounded-md border border-gray-200 py-[9px] pl-10 text-sm outline-2 placeholder:text-gray-500&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">onChange</span>=<span class="string">&#123;(e)</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                    handleSearch(e.target.value);</span></span><br><span class="line"><span class="language-xml">                &#125;&#125;</span></span><br><span class="line"><span class="language-xml">                defaultValue=&#123;searchParams.get(&#x27;query&#x27;)?.toString()&#125;</span></span><br><span class="line"><span class="language-xml">            /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">MagnifyingGlassIcon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">className</span>=<span class="string">&quot;absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500 peer-focus:text-gray-900&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加分页"><a href="#添加分页" class="headerlink" title="添加分页"></a>添加分页</h2><p><code>app/ui/invoices/pagination.tsx</code>文件中写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use client&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">ArrowLeftIcon</span>, <span class="title class_">ArrowRightIcon</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@heroicons/react/24/outline&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> clsx <span class="keyword">from</span> <span class="string">&#x27;clsx&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Link</span> <span class="keyword">from</span> <span class="string">&#x27;next/link&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;generatePagination&#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/lib/utils&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;usePathname, useSearchParams&#125; <span class="keyword">from</span> <span class="string">&#x27;next/navigation&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Pagination</span>(<span class="params">&#123;totalPages&#125;: &#123; totalPages: number &#125;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> pathname = <span class="title function_">usePathname</span>();</span><br><span class="line">    <span class="keyword">const</span> searchParams = <span class="title function_">useSearchParams</span>();</span><br><span class="line">    <span class="keyword">const</span> currentPage = <span class="title class_">Number</span>(searchParams.<span class="title function_">get</span>(<span class="string">&#x27;page&#x27;</span>)) || <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> allPages = <span class="title function_">generatePagination</span>(currentPage, totalPages);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">createPageURL</span> = (<span class="params">pageNumber: number | string</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(searchParams);</span><br><span class="line">        params.<span class="title function_">set</span>(<span class="string">&#x27;page&#x27;</span>, pageNumber.<span class="title function_">toString</span>());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;pathname&#125;</span>?<span class="subst">$&#123;params.toString()&#125;</span>`</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;inline-flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">PaginationArrow</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">direction</span>=<span class="string">&quot;left&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">href</span>=<span class="string">&#123;createPageURL(currentPage</span> <span class="attr">-</span> <span class="attr">1</span>)&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">isDisabled</span>=<span class="string">&#123;currentPage</span> &lt;= <span class="string">1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex -space-x-px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    &#123;allPages.map((page, index) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">                        let position: &#x27;first&#x27; | &#x27;last&#x27; | &#x27;single&#x27; | &#x27;middle&#x27; | undefined;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">                        if (index === 0) position = &#x27;first&#x27;;</span></span><br><span class="line"><span class="language-xml">                        if (index === allPages.length - 1) position = &#x27;last&#x27;;</span></span><br><span class="line"><span class="language-xml">                        if (allPages.length === 1) position = &#x27;single&#x27;;</span></span><br><span class="line"><span class="language-xml">                        if (page === &#x27;...&#x27;) position = &#x27;middle&#x27;;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">                        return (</span></span><br><span class="line"><span class="language-xml">                            <span class="tag">&lt;<span class="name">PaginationNumber</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                                <span class="attr">key</span>=<span class="string">&#123;page&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                                <span class="attr">href</span>=<span class="string">&#123;createPageURL(page)&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                                <span class="attr">page</span>=<span class="string">&#123;page&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                                <span class="attr">position</span>=<span class="string">&#123;position&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                                <span class="attr">isActive</span>=<span class="string">&#123;currentPage</span> === <span class="string">page&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                            /&gt;</span></span></span><br><span class="line"><span class="language-xml">                        );</span></span><br><span class="line"><span class="language-xml">                    &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">PaginationArrow</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">direction</span>=<span class="string">&quot;right&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">href</span>=<span class="string">&#123;createPageURL(currentPage</span> + <span class="attr">1</span>)&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">isDisabled</span>=<span class="string">&#123;currentPage</span> &gt;</span>= totalPages&#125;</span></span><br><span class="line"><span class="language-xml">                /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">PaginationNumber</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">                              page,</span></span><br><span class="line"><span class="params">                              href,</span></span><br><span class="line"><span class="params">                              isActive,</span></span><br><span class="line"><span class="params">                              position,</span></span><br><span class="line"><span class="params">                          &#125;: &#123;</span></span><br><span class="line"><span class="params">    page: number | string;</span></span><br><span class="line"><span class="params">    href: string;</span></span><br><span class="line"><span class="params">    position?: <span class="string">&#x27;first&#x27;</span> | <span class="string">&#x27;last&#x27;</span> | <span class="string">&#x27;middle&#x27;</span> | <span class="string">&#x27;single&#x27;</span>;</span></span><br><span class="line"><span class="params">    isActive: boolean;</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> className = <span class="title function_">clsx</span>(</span><br><span class="line">        <span class="string">&#x27;flex h-10 w-10 items-center justify-center text-sm border&#x27;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&#x27;rounded-l-md&#x27;</span>: position === <span class="string">&#x27;first&#x27;</span> || position === <span class="string">&#x27;single&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;rounded-r-md&#x27;</span>: position === <span class="string">&#x27;last&#x27;</span> || position === <span class="string">&#x27;single&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;z-10 bg-blue-600 border-blue-600 text-white&#x27;</span>: isActive,</span><br><span class="line">            <span class="string">&#x27;hover:bg-gray-100&#x27;</span>: !isActive &amp;&amp; position !== <span class="string">&#x27;middle&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;text-gray-300&#x27;</span>: position === <span class="string">&#x27;middle&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> isActive || position === <span class="string">&#x27;middle&#x27;</span> ? (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;className&#125;</span>&gt;</span>&#123;page&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    ) : (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">Link</span> <span class="attr">href</span>=<span class="string">&#123;href&#125;</span> <span class="attr">className</span>=<span class="string">&#123;className&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;page&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">PaginationArrow</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">                             href,</span></span><br><span class="line"><span class="params">                             direction,</span></span><br><span class="line"><span class="params">                             isDisabled,</span></span><br><span class="line"><span class="params">                         &#125;: &#123;</span></span><br><span class="line"><span class="params">    href: string;</span></span><br><span class="line"><span class="params">    direction: <span class="string">&#x27;left&#x27;</span> | <span class="string">&#x27;right&#x27;</span>;</span></span><br><span class="line"><span class="params">    isDisabled?: boolean;</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> className = <span class="title function_">clsx</span>(</span><br><span class="line">        <span class="string">&#x27;flex h-10 w-10 items-center justify-center rounded-md border&#x27;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&#x27;pointer-events-none text-gray-300&#x27;</span>: isDisabled,</span><br><span class="line">            <span class="string">&#x27;hover:bg-gray-100&#x27;</span>: !isDisabled,</span><br><span class="line">            <span class="string">&#x27;mr-2 md:mr-4&#x27;</span>: direction === <span class="string">&#x27;left&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;ml-2 md:ml-4&#x27;</span>: direction === <span class="string">&#x27;right&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> icon =</span><br><span class="line">        direction === <span class="string">&#x27;left&#x27;</span> ? (</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">ArrowLeftIcon</span> <span class="attr">className</span>=<span class="string">&quot;w-4&quot;</span>/&gt;</span></span></span><br><span class="line">        ) : (</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">ArrowRightIcon</span> <span class="attr">className</span>=<span class="string">&quot;w-4&quot;</span>/&gt;</span></span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> isDisabled ? (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;className&#125;</span>&gt;</span>&#123;icon&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    ) : (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">Link</span> <span class="attr">className</span>=<span class="string">&#123;className&#125;</span> <span class="attr">href</span>=<span class="string">&#123;href&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;icon&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后取消page.tsx文件中的pagination组件注释。在<code>app/ui/search.tsx</code>文件中，handleSearch函数里写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">params.<span class="title function_">set</span>(<span class="string">&#x27;page&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br></pre></td></tr></table></figure><p>最后效果：<br><img src="https://images2.imgbox.com/21/b1/A42Su9rE_o.png" alt="image host"/></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;动态渲染&quot;&gt;&lt;a href=&quot;#动态渲染&quot; class=&quot;headerlink&quot; title=&quot;动态渲染&quot;&gt;&lt;/a&gt;动态渲染&lt;/h2&gt;&lt;p&gt;对那些需要实时更新的页面采用动态渲染，在&lt;code&gt;data.tsx&lt;/code&gt;里写入：&lt;/p&gt;
&lt;figure clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>next教程（三）</title>
    <link href="http://example.com/2024/04/05/next%E6%95%99%E7%A8%8B%E4%B8%89/"/>
    <id>http://example.com/2024/04/05/next%E6%95%99%E7%A8%8B%E4%B8%89/</id>
    <published>2024-04-05T06:42:09.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>web程序大部分都是从数据库里获取一些数据，然后显示出来。有了页面，但是页面上还没有数据。首先，需要先要有个数据库，数据库可以是本地的可以是远程的，这里采用远程数据库。<a href="https://nextjs.org/learn/dashboard-app/setting-up-your-database">点击此链接</a> 创建一个远程数据库，前提是得有GitHub账号和Vercel 账号。</p><p>创建完之后把远程数据库的<code>.env.local</code>文件中的内容复制到项目根目录，重命名为<code>.env</code>。<br>然后运行 <code>npm install @vercel/postgres</code> 安装Vercel Postgres SDK。</p><h2 id="添加一些数据"><a href="#添加一些数据" class="headerlink" title="添加一些数据"></a>添加一些数据</h2><p>在package.json文件里写入：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;next build&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;next dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;next start&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;seed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node -r dotenv/config ./scripts/seed.js&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>然后运行<code>npm run seed</code>,即可把预先准备的数据添加进去。</p><h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><p>打开<code>/app/lib/data.ts</code>文件，在这个文件里查询数据，先写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; sql &#125; <span class="keyword">from</span> <span class="string">&#x27;@vercel/postgres&#x27;</span>;</span><br></pre></td></tr></table></figure><p>导入sql函数。然后打开<code>/app/dashboard/page.tsx</code>文件，写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Card</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/dashboard/cards&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RevenueChart</span> <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/dashboard/revenue-chart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LatestInvoices</span> <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/dashboard/latest-invoices&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; lusitana &#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/fonts&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">Page</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">main</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">lusitana.className</span>&#125; <span class="attr">mb-4</span> <span class="attr">text-xl</span> <span class="attr">md:text-2xl</span>`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        Dashboard</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;grid gap-6 sm:grid-cols-2 lg:grid-cols-4&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* <span class="tag">&lt;<span class="name">Card</span> <span class="attr">title</span>=<span class="string">&quot;Collected&quot;</span> <span class="attr">value</span>=<span class="string">&#123;totalPaidInvoices&#125;</span> <span class="attr">type</span>=<span class="string">&quot;collected&quot;</span> /&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;/* <span class="tag">&lt;<span class="name">Card</span> <span class="attr">title</span>=<span class="string">&quot;Pending&quot;</span> <span class="attr">value</span>=<span class="string">&#123;totalPendingInvoices&#125;</span> <span class="attr">type</span>=<span class="string">&quot;pending&quot;</span> /&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;/* <span class="tag">&lt;<span class="name">Card</span> <span class="attr">title</span>=<span class="string">&quot;Total Invoices&quot;</span> <span class="attr">value</span>=<span class="string">&#123;numberOfInvoices&#125;</span> <span class="attr">type</span>=<span class="string">&quot;invoices&quot;</span> /&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;/* <span class="tag">&lt;<span class="name">Card</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">title</span>=<span class="string">&quot;Total Customers&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;numberOfCustomers&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;customers&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;mt-6 grid grid-cols-1 gap-6 md:grid-cols-4 lg:grid-cols-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* <span class="tag">&lt;<span class="name">RevenueChart</span> <span class="attr">revenue</span>=<span class="string">&#123;revenue&#125;</span>  /&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;/* <span class="tag">&lt;<span class="name">LatestInvoices</span> <span class="attr">latestInvoices</span>=<span class="string">&#123;latestInvoices&#125;</span> /&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个文件里，page组件前面有个async，是异步组件。导入了三个组件来接受数据： <code>&lt;Card&gt;</code>, <code>&lt;RevenueChart&gt;</code>,  <code>&lt;LatestInvoices&gt;</code>。<br>接下来在此文件里写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fetchRevenue &#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/lib/data&#x27;</span>;</span><br></pre></td></tr></table></figure><p>导入fetchRevenue函数，在page函数里写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> revenue = <span class="keyword">await</span> <span class="title function_">fetchRevenue</span>();</span><br></pre></td></tr></table></figure><p>调用此函数。然后取消<code>&lt;RevenueChart&gt;</code>组件的注释。打开浏览器<code>127.0.0.1:3000/dashboard</code>查看效果。</p><h2 id="更多数据"><a href="#更多数据" class="headerlink" title="更多数据"></a>更多数据</h2><p>打开<code>app/lib/data.ts</code>,写入:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Fetch the last 5 invoices, sorted by date</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchLatestInvoices</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> sql&lt;<span class="title class_">LatestInvoiceRaw</span>&gt;<span class="string">`</span></span><br><span class="line"><span class="string">      SELECT invoices.amount, customers.name, customers.image_url, customers.email, invoices.id</span></span><br><span class="line"><span class="string">      FROM invoices</span></span><br><span class="line"><span class="string">      JOIN customers ON invoices.customer_id = customers.id</span></span><br><span class="line"><span class="string">      ORDER BY invoices.date DESC</span></span><br><span class="line"><span class="string">      LIMIT 5`</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> latestInvoices = data.<span class="property">rows</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">invoice</span>) =&gt;</span> (&#123;</span><br><span class="line">            ...invoice,</span><br><span class="line">            <span class="attr">amount</span>: <span class="title function_">formatCurrency</span>(invoice.<span class="property">amount</span>),</span><br><span class="line">        &#125;));</span><br><span class="line">        <span class="keyword">return</span> latestInvoices;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Database Error:&#x27;</span>, error);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Failed to fetch the latest invoices.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开 <code>page.tsx</code> 文件 ，然后写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;fetchRevenue, fetchLatestInvoices&#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/lib/data&#x27;</span>;</span><br></pre></td></tr></table></figure><p>page函数内写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> latestInvoices = <span class="keyword">await</span> <span class="title function_">fetchLatestInvoices</span>();</span><br></pre></td></tr></table></figure><p>然后取消组件的注释，查看效果。</p><p>最后获取一个还剩一个card组件，修改<code>page.tsx</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Card</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/dashboard/cards&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RevenueChart</span> <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/dashboard/revenue-chart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LatestInvoices</span> <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/dashboard/latest-invoices&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; lusitana &#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/fonts&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  fetchRevenue,</span><br><span class="line">  fetchLatestInvoices,</span><br><span class="line">  fetchCardData,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/lib/data&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">Page</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> revenue = <span class="keyword">await</span> <span class="title function_">fetchRevenue</span>();</span><br><span class="line">  <span class="keyword">const</span> latestInvoices = <span class="keyword">await</span> <span class="title function_">fetchLatestInvoices</span>();</span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    numberOfInvoices,</span><br><span class="line">    numberOfCustomers,</span><br><span class="line">    totalPaidInvoices,</span><br><span class="line">    totalPendingInvoices,</span><br><span class="line">  &#125; = <span class="keyword">await</span> <span class="title function_">fetchCardData</span>();</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">main</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">lusitana.className</span>&#125; <span class="attr">mb-4</span> <span class="attr">text-xl</span> <span class="attr">md:text-2xl</span>`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        Dashboard</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;grid gap-6 sm:grid-cols-2 lg:grid-cols-4&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Card</span> <span class="attr">title</span>=<span class="string">&quot;Collected&quot;</span> <span class="attr">value</span>=<span class="string">&#123;totalPaidInvoices&#125;</span> <span class="attr">type</span>=<span class="string">&quot;collected&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Card</span> <span class="attr">title</span>=<span class="string">&quot;Pending&quot;</span> <span class="attr">value</span>=<span class="string">&#123;totalPendingInvoices&#125;</span> <span class="attr">type</span>=<span class="string">&quot;pending&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Card</span> <span class="attr">title</span>=<span class="string">&quot;Total Invoices&quot;</span> <span class="attr">value</span>=<span class="string">&#123;numberOfInvoices&#125;</span> <span class="attr">type</span>=<span class="string">&quot;invoices&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Card</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">title</span>=<span class="string">&quot;Total Customers&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;numberOfCustomers&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;customers&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;mt-6 grid grid-cols-1 gap-6 md:grid-cols-4 lg:grid-cols-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">RevenueChart</span> <span class="attr">revenue</span>=<span class="string">&#123;revenue&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">LatestInvoices</span> <span class="attr">latestInvoices</span>=<span class="string">&#123;latestInvoices&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终效果：<br><img src="https://images2.imgbox.com/5e/2a/BxQ7rWhj_o.png" alt="image host"/></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创建数据库&quot;&gt;&lt;a href=&quot;#创建数据库&quot; class=&quot;headerlink&quot; title=&quot;创建数据库&quot;&gt;&lt;/a&gt;创建数据库&lt;/h2&gt;&lt;p&gt;web程序大部分都是从数据库里获取一些数据，然后显示出来。有了页面，但是页面上还没有数据。首先，需要先要有个数据库，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>文字的优势</title>
    <link href="http://example.com/2024/04/05/%E6%96%87%E5%AD%97%E7%9A%84%E4%BC%98%E5%8A%BF/"/>
    <id>http://example.com/2024/04/05/%E6%96%87%E5%AD%97%E7%9A%84%E4%BC%98%E5%8A%BF/</id>
    <published>2024-04-05T05:22:31.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<p>现在这个年代不缺图像，人的精神面貌，乃至生活方式，三观，已经被图像改变。信息时代，最受欢迎，传播最广的信息形式还就只有图像。这是自然之理，毕竟“一图胜千言”。</p><p>可是在图像的世界里，我们失去了一个东西–“抽象能力”，好的图像创作者是有抽象能力的，只是观看图像的人没有。抽象能力，就是 概括，总结，的能力。 能从表象中抓住关键的部分，知道哪些东西应该忽略，是一种选择性提取信息。文字这种形式，鼓励人用抽象思维。 有时候明明一句话说清楚的事情，有的人硬是拍个几十分钟的视频，荒唐至极。互联网公司鼓励图像，是想传播范围最大化。 所以，文化，内容生产绝不能让互联网公司来主导。</p><p>我不确定图像的迷惑性更大还是其它媒介的迷惑性大，但是对我来说，图像更擅长制造幻觉。至少比文字这种东西更具“感官性”，所有的艺术形式都在告诉你，“感官性”是艺术中的低级趣味。很遗憾，在艺术的演变过程中，低级趣味总会占据主流。</p><p>写作的难度，无需多言。人的思维非常跳跃，而写作能让人有条理的理顺思维。这就是在传播知识的时候，文字仍然是主流的原因。因为文字能够较为准确的，不模糊的表达含义。图像声音影像传播的含义太模糊，太受一些知识之外的因素影响。</p><p>到现在我也有“凑字数”的习惯，好像不写长一点就显得特别不深刻。但是，我现在明白，文字的最大优势其实就是简洁。</p><p>文字的精确，抽象，简洁是它的优势，当然，也可以让文字不精确，不抽象，不简洁。所谓的“写实主义”作家，就是这样。从我的观点来看， 他们从来就没“写实”，他们非常清楚自己在制造幻觉。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现在这个年代不缺图像，人的精神面貌，乃至生活方式，三观，已经被图像改变。信息时代，最受欢迎，传播最广的信息形式还就只有图像。这是自然之理，毕竟“一图胜千言”。&lt;/p&gt;
&lt;p&gt;可是在图像的世界里，我们失去了一个东西–“抽象能力”，好的图像创作者是有抽象能力的，只是观看图像的人</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>next教程（二）</title>
    <link href="http://example.com/2024/04/04/next%E6%95%99%E7%A8%8B%E4%BA%8C/"/>
    <id>http://example.com/2024/04/04/next%E6%95%99%E7%A8%8B%E4%BA%8C/</id>
    <published>2024-04-04T11:10:38.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>nextjs路由采用文件路径映射，比如新建一个<code>app/dashboard/page.tsx</code>,url就是<code>127.0.0.1:3000/dashboard</code>。<br>新建<code>app/dashboard/page.tsx</code>文件，写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Page</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>仪表盘<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在浏览器地址栏输入<code>127.0.0.1:3000/dashboard</code>查看，显示刚创建好的页面。</p><p>新建<code>app/dashboard/customers/page.tsx</code>和<code>app/dashboard/invoices/page.tsx</code>文件，分别写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Page</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>客户页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Page</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>发票页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在地址栏输入<code>127.0.0.1:3000/dashboard/customers</code>, <code>127.0.0.1:3000/dashboard/invoices</code>查看。</p><h2 id="修改布局"><a href="#修改布局" class="headerlink" title="修改布局"></a>修改布局</h2><p>建好的页面没有布局，只显示几个字。创建布局的方法是在文件夹里新建<code>layout.tsx</code>文件，比如在dashboard文件夹里创建<br><code>layout.tsx</code>，就是这个文件夹里所有的页面都采用这个布局。</p><p>创建<code>app/dashboard/layout.tsx</code>文件，写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">SideNav</span> <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/dashboard/sidenav&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Layout</span>(<span class="params">&#123;children&#125;: &#123; children: React.ReactNode &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex h-screen flex-col md:flex-row md:overflow-hidden&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;w-full flex-none md:w-64&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">SideNav</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex-grow p-6 md:overflow-y-auto md:p-12&quot;</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>来应用布局。</p><h2 id="页面跳转"><a href="#页面跳转" class="headerlink" title="页面跳转"></a>页面跳转</h2><p>用next的<code>&lt;Link&gt;</code>组件来替代<code>&lt;a&gt;</code>标签,这样就可以不用刷新整个页面，找到<code>app/ui/dashboard/nav-link.tsx</code>文件，写入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use client&#x27;</span>; <span class="comment">//客户端组件，用到hook的时候加上这句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">UserGroupIcon</span>,</span><br><span class="line">    <span class="title class_">HomeIcon</span>,</span><br><span class="line">    <span class="title class_">DocumentDuplicateIcon</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;@heroicons/react/24/outline&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Link</span> <span class="keyword">from</span> <span class="string">&#x27;next/link&#x27;</span>; <span class="comment">//导入link组件</span></span><br><span class="line"><span class="keyword">import</span> &#123;usePathname&#125; <span class="keyword">from</span> <span class="string">&#x27;next/navigation&#x27;</span>; <span class="comment">//导入hook</span></span><br><span class="line"><span class="keyword">import</span> clsx <span class="keyword">from</span> <span class="string">&#x27;clsx&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Map of links to display in the side navigation.</span></span><br><span class="line"><span class="comment">// Depending on the size of the application, this would be stored in a database.</span></span><br><span class="line"><span class="keyword">const</span> links = [</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;主页&#x27;</span>, <span class="attr">href</span>: <span class="string">&#x27;/dashboard&#x27;</span>, <span class="attr">icon</span>: <span class="title class_">HomeIcon</span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;发票&#x27;</span>,</span><br><span class="line">        <span class="attr">href</span>: <span class="string">&#x27;/dashboard/invoices&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="title class_">DocumentDuplicateIcon</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;客户&#x27;</span>, <span class="attr">href</span>: <span class="string">&#x27;/dashboard/customers&#x27;</span>, <span class="attr">icon</span>: <span class="title class_">UserGroupIcon</span>&#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">NavLinks</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> pathname = <span class="title function_">usePathname</span>();</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;links.map((link) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">                const LinkIcon = link.icon;</span></span><br><span class="line"><span class="language-xml">                return (</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">Link</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        <span class="attr">key</span>=<span class="string">&#123;link.name&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        <span class="attr">href</span>=<span class="string">&#123;link.href&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        <span class="attr">className</span>=<span class="string">&#123;clsx(</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                            &#x27;<span class="attr">flex</span> <span class="attr">h-</span>[<span class="attr">48px</span>] <span class="attr">grow</span> <span class="attr">items-center</span> <span class="attr">justify-center</span> <span class="attr">gap-2</span> <span class="attr">rounded-md</span> <span class="attr">bg-gray-50</span> <span class="attr">p-3</span> <span class="attr">text-sm</span> <span class="attr">font-medium</span> <span class="attr">hover:bg-sky-100</span> <span class="attr">hover:text-blue-600</span> <span class="attr">md:flex-none</span> <span class="attr">md:justify-start</span> <span class="attr">md:p-2</span> <span class="attr">md:px-3</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                                &#x27;<span class="attr">bg-sky-100</span> <span class="attr">text-blue-600</span>&#x27;<span class="attr">:</span> <span class="attr">pathname</span> === <span class="string">link.href,</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        )&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    &gt;</span></span></span><br><span class="line"><span class="language-xml">                        <span class="tag">&lt;<span class="name">LinkIcon</span> <span class="attr">className</span>=<span class="string">&quot;w-6&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;hidden md:block&quot;</span>&gt;</span>&#123;link.name&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                );</span></span><br><span class="line"><span class="language-xml">            &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图：<br><img src="https://images2.imgbox.com/b5/e7/W4P3wSDw_o.png" alt="image host"/></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;路由&quot;&gt;&lt;a href=&quot;#路由&quot; class=&quot;headerlink&quot; title=&quot;路由&quot;&gt;&lt;/a&gt;路由&lt;/h2&gt;&lt;p&gt;nextjs路由采用文件路径映射，比如新建一个&lt;code&gt;app/dashboard/page.tsx&lt;/code&gt;,url就是&lt;code&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>nextjs教程（一）</title>
    <link href="http://example.com/2024/04/04/nextjs%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2024/04/04/nextjs%E6%95%99%E7%A8%8B/</id>
    <published>2024-04-03T17:07:06.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装nextjs："><a href="#安装nextjs：" class="headerlink" title="安装nextjs："></a>安装nextjs：</h2><p>nextjs是一个react框架。</p><blockquote><p>npx create-next-app@latest</p></blockquote><p>这是官方文档推荐的安装方式，<br>这里我用另一个命令安装别人已经写好的半成品：</p><blockquote><p>npx create-next-app@latest nextjs-dashboard –use-npm –example “<a href="https://github.com/vercel/next-learn/tree/main/dashboard/starter-example">https://github.com/vercel/next-learn/tree/main/dashboard/starter-example</a>“</p></blockquote><p>安装好之后，cd到<code>nextjs-dashboard</code>目录，运行<code>npm install</code>安装所需依赖，然后运行<code>npm run dev</code>查看效果。</p><h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><p>这个模板工程默认没有导入css，到<code>app</code>目录下找到<code>layout.tsx</code>文件，输入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/app/ui/global.css&#x27;</span>;</span><br></pre></td></tr></table></figure><p>导入样式，使之生效。</p><h2 id="tailwind-css"><a href="#tailwind-css" class="headerlink" title="tailwind css"></a>tailwind css</h2><p>此工程默认采用tailwind css这个库来写样式，为什么不用原生写呢？当然原生也可以，react开发组件把html和js写到一块去了，<br>而tailwind css 让css也跟html，js糅合到一块去。这种把html，css写在JavaScript的方式可能有人不喜欢，没关系，<br>反正前端框架到处都是，分开写的也有很多。</p><h2 id="优化字体"><a href="#优化字体" class="headerlink" title="优化字体"></a>优化字体</h2><p><code>/app/ui/</code>目录里创建<code>fonts.ts</code>文件,写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Inter</span>, <span class="title class_">Lusitana</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;next/font/google&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> inter = <span class="title class_">Inter</span>(&#123; <span class="attr">subsets</span>: [<span class="string">&#x27;latin&#x27;</span>] &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> lusitana = <span class="title class_">Lusitana</span>(&#123;</span><br><span class="line">    <span class="attr">weight</span>: [<span class="string">&#x27;400&#x27;</span>, <span class="string">&#x27;700&#x27;</span>],</span><br><span class="line">    <span class="attr">subsets</span>: [<span class="string">&#x27;latin&#x27;</span>],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>导入google字体。</p><p><code>layout.ts</code>文件里写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/app/ui/global.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;inter&#125; <span class="keyword">from</span> <span class="string">&#x27;@/app/ui/fonts&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">RootLayout</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">                                       children,</span></span><br><span class="line"><span class="params">                                   &#125;: &#123;</span></span><br><span class="line"><span class="params">    children: React.ReactNode;</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">body</span> <span class="attr">className</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">inter.className</span>&#125; <span class="attr">antialiased</span>`&#125;&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使字体对整个网页生效，antialiased是一个tailwind类名，作用是使字体平滑。<br>到<code>page.tsx</code>文件里取消<code>&lt;AcmeLogo/&gt;</code>组件的注释。</p><h2 id="优化图片"><a href="#优化图片" class="headerlink" title="优化图片"></a>优化图片</h2><p>nextjs的图片的根目录为<code>/public</code>，在这里放图片。<br>用nextjs的<code>&lt;Image&gt;</code>组件替代html的<code>&lt;img&gt;</code>标签，可以响应不同屏幕图像的尺寸。</p><p>在page.tsx里写入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Image</span> <span class="keyword">from</span> <span class="string">&quot;next/image&quot;</span>;</span><br></pre></td></tr></table></figure><p>导入组件。<br>然后在return里头写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Image</span></span><br><span class="line">    src=<span class="string">&quot;/hero-desktop.png&quot;</span></span><br><span class="line">    width=&#123;<span class="number">1000</span>&#125;</span><br><span class="line">    height=&#123;<span class="number">760</span>&#125;</span><br><span class="line">    className=<span class="string">&quot;hidden md:block&quot;</span></span><br><span class="line">    alt=<span class="string">&quot;Screenshots of the dashboard project showing desktop version&quot;</span></span><br><span class="line">/&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Image</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">src</span>=<span class="string">&quot;/hero-mobile.png&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">width</span>=<span class="string">&#123;560&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">height</span>=<span class="string">&#123;620&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">className</span>=<span class="string">&quot;block md:hidden&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">alt</span>=<span class="string">&quot;Screenshot of the dashboard project showing mobile version&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">/&gt;</span></span></span><br></pre></td></tr></table></figure><p>做好后效果图如下：<br><img src="https://images2.imgbox.com/cb/8c/N563eHYh_o.png" alt="image host"/></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装nextjs：&quot;&gt;&lt;a href=&quot;#安装nextjs：&quot; class=&quot;headerlink&quot; title=&quot;安装nextjs：&quot;&gt;&lt;/a&gt;安装nextjs：&lt;/h2&gt;&lt;p&gt;nextjs是一个react框架。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;npx </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ffmpeg实用命令</title>
    <link href="http://example.com/2024/04/03/ffmpeg%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2024/04/03/ffmpeg%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2024-04-02T18:25:37.000Z</published>
    <updated>2024-05-02T05:19:10.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>ffmpeg是一个<code>媒体转换器</code>，可以把媒体源文件转换成多种格式。</p><h2 id="转码"><a href="#转码" class="headerlink" title="转码"></a>转码</h2><p>ffmpeg用<code>-i</code>参数读取源文件，比如读取input.avi，转码输出output.mp4：</p><blockquote><p>ffmpeg -i input.avi output.mp4</p></blockquote><p>这种方式转码速度较慢，因为会对源文件重新编码。</p><p>ts转MP4：</p><blockquote><p>ffmpeg -i input.ts -c copy -bsf:a aac_adtstoasc output.mp4</p></blockquote><p><code>-c</code>参数指定<code>copy</code>的意思是流复制，这样省去了重新编码的时间，格式转换将十分迅速。</p><p><code>-bsf:a</code>参数指定<code>aac_adtstoasc</code>的意思是，指定<code>aac_adtstoasc</code>过滤器，<br>该过滤器创建 MP4 音频配置， <code>-bsf</code>表示选择过滤器，冒号后面的a表示audio。<br>输入<code>ffmpeg -bsfs</code>命令会列出所有可用过滤器。</p><h2 id="截取视频"><a href="#截取视频" class="headerlink" title="截取视频"></a>截取视频</h2><p>截取从00：3：00开始到结尾的视频</p><blockquote><p>ffmpeg -ss 00:03:00 -i video.mp4 -c copy pieces.mp4</p></blockquote><p>截取指定时间，从00：3：00到00：20：00</p><blockquote><p>ffmpeg -ss 00:03:00 -i video.mp4 -to 00:20:00 -c copy pieces.mp4</p></blockquote><h2 id="合并视频"><a href="#合并视频" class="headerlink" title="合并视频"></a>合并视频</h2><p>1.写入first file.mp4和second file.mp4到list.txt中</p><blockquote><p>(echo file ‘first file.mp4’ &amp; echo file ‘second file.mp4’ )&gt;list.txt</p></blockquote><p>2.以list.txt作为输入源</p><blockquote><p>ffmpeg -safe 0 -f concat -i list.txt -c copy output.mp4</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;ffmpeg是一个&lt;code&gt;媒体转换器&lt;/code&gt;，可以把媒体源文件转换成多种格式。&lt;/p&gt;
&lt;h2 id=&quot;转码&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2024/04/01/hello-world/"/>
    <id>http://example.com/2024/04/01/hello-world/</id>
    <published>2024-03-31T18:25:37.000Z</published>
    <updated>2024-05-02T05:21:45.713Z</updated>
    
    <content type="html"><![CDATA[<p>博客建好了，这是第一篇博文。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;博客建好了，这是第一篇博文。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
